<!DOCTYPE html>
<html lang="en">
<head>

    <title>LoraWAN TestBed - <%=title%></title>
 

    
    <!-- <link rel="stylesheet" href="./../../public/stylesheets/dashboard.css"> -->
    <!-- Global level stylesheet -->
    <script src="https://unpkg.com/mqtt@4.2.8/dist/mqtt.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    
    <script>
            

            const streaming_broker_protocol = "ws"; //pass from server
            const streaming_broker_addr = '<%= broker.addr %>'; //pass from server
            const streaming_broker_port = '<%= broker.port %>'; //pass from server

            const STORAGE_KEY = 'payload-storage';
            const MAX_SESSION_STORAGE_LENGTH = 20;

            //pass from server
            // const devices = [
            //     "eui-a84041a54182a79f"
            // ];
            const devices = '<%= dev_list %>'.split(",");
            // console.log(devices);
            //pass from server
            const streaming_broker_options = {
                clientId: '<%= client_id %>',
                username: '<%= broker.id %>',
                password: '<%= broker.psw %>',
                keepalive: 120,
                protocolVersion: 5,
                clean: false,
                properties: {  // MQTT 5.0
                    sessionExpiryInterval: 300
                }
                // resubscribe: false
            }

            const sub_topics = [];
            devices.forEach((device_id) => {
                sub_topics.push({
                    'topic': `devices/${device_id}/up/payload`,
                    'options': {
                        'qos': 0
                    }
                });
            });
                
            const streaming_broker_mqttclient = mqtt.connect(
                `${streaming_broker_protocol}://${streaming_broker_addr}:${streaming_broker_port}/mqtt`, 
                streaming_broker_options
            );
            
            streaming_broker_mqttclient.on('connect', streaming_broker_connect_handler);
            streaming_broker_mqttclient.on('error', streaming_broker_error_handler);
            streaming_broker_mqttclient.on('message', streaming_broker_message_handler);
            
            
            
            //create browser storage instance
            const clientStorage = localStorage;

            //handle incoming connect
            function streaming_broker_connect_handler(connack)
            {
                try {
                    console.log(`streaming broker connected? ${streaming_broker_mqttclient.connected}`);
                    if(connack.sessionPresent==false){
                        
                        clientStorage.removeItem(STORAGE_KEY);
                        sub_topics.forEach((topic) => {
                            streaming_broker_mqttclient.subscribe(topic['topic'], topic['options']);
                        });
                    }else{
                        let storage = clientStorage.getItem(STORAGE_KEY);
                        let length_flag = 0;
                        if(storage){
                            storage = JSON.parse(storage);
                        }else{
                            return;
                        }
                        for(let i in storage.payload){
                            
                            for(let j in storage.payload[i].payload_data){
                                document.querySelectorAll(`[id^=timestamp-payload-data-${i}-${j}]`).forEach((item)=>{
                                                                item.innerHTML = `<%= __('Last updated') %>: ${storage.payload[i].recv_timestamp.at(-1)}`;                                 
                                });
                                document.querySelectorAll(`[id^=payload-data-${i}-${j}]`).forEach((item)=>{
                                                                    item.innerHTML = storage.payload[i].payload_data[j].at(-1);                                  
                                });
                                document.querySelectorAll(`[id^="chart payload-data"]`).forEach((item)=>{
                                        
                                        let id = $(item).data('id');

                                        if (!id) return;

                                        for(let k in id.dev){
                                            if(id.dev[k]==i && id.sensor[k]==j){
                                                var graph = $(item).data('graph');
                                                let labels = graph.data.labels.concat(storage.payload[i].recv_timestamp);
                                                graph.data.labels=[...new Set(labels)];
                                                graph.data.labels.sort();
                                                // graph.data.datasets[0].data=storage.payload[i].payload_data[j];
                                                graph.data.datasets.forEach((item) => {
                                                    if(item.id.dev == i && item.id.sensor == j){
                                                        item.data = storage.payload[i].recv_timestamp.map((element,index)=>{
                                                            return {
                                                                x: element,
                                                                y: storage.payload[i].payload_data[j][index]
                                                            }
                                                        });
                                            
                                                    }
                                                    // else {
                                                    //     item.data = NaN;
                                                    // }
                                                })
                                                graph.update(); 
                                            }
                                        }

                                });
                            }
                        }


                    }
                }
                catch(err) {
                    console.log(err);
                }
                
            }
            
            //MESSAGE SEND HERE
            function streaming_broker_message_handler(topic, message, packet)
            {
                try {
                    //parse msg
                    let parsed_message = JSON.parse(message);
                    //CONTINUE
                    //document.getElementById("payload-data-58").innerHTML = parsed_message;
                    console.log(topic);
                    console.log('parsed_message', parsed_message);
                    var recv_topic = topic.split('/')[1];
                    // var data = `"${recv_topic}": ${parsed_message.payload_data}`;

                    // var data = JSON.parse(window.localStorage.getItem('payload-data'));
                    // if(!data) data = {};
                    // data[recv_topic] = JSON.stringify(parsed_message.payload_data);
                    // window.localStorage.setItem(`payload-data`, JSON.stringify(data));
                    let storage = clientStorage.getItem(STORAGE_KEY);
                    let length_flag = 0;
                    if(storage){
                        storage = JSON.parse(storage);
                    }else{
                        storage = {
                            payload: {}
                        }
                    }
                    if(!storage.payload[recv_topic]){
                        storage.payload[recv_topic] = {};
                        storage.payload[recv_topic].recv_timestamp = [];
                        storage.payload[recv_topic].payload_data = {};
                        length_flag = 1;
                    }else if(storage.payload[recv_topic].recv_timestamp.length > MAX_SESSION_STORAGE_LENGTH){
                        storage.payload[recv_topic].recv_timestamp.shift();
                        length_flag = 2;
                    }
                    parsed_message.recv_timestamp = timestamp_format(parsed_message.recv_timestamp);
                    storage.payload[recv_topic].recv_timestamp.push(parsed_message.recv_timestamp);

                    for(var i in parsed_message.payload_data){
                        // console.log('i', i);
                        // do3cument.getElementById(`payload-data-${recv_topic}-${i}`).innerHTML = parsed_message.payload_data[i];
                        
                        //STORAGE
                        if(length_flag==1){
                            storage.payload[recv_topic].payload_data[i] = [];
                        }else if(length_flag==2){
                            storage.payload[recv_topic].payload_data[i].shift();
                        }
                        storage.payload[recv_topic].payload_data[i].push(parsed_message.payload_data[i]);

                        //GRAPH
                        document.querySelectorAll(`[id^=timestamp-payload-data-${recv_topic}-${i}]`).forEach((item)=>{
                                                            item.innerHTML = `<%= __('Last updated') %>: ${parsed_message.recv_timestamp}`;                                  
                        });
                        document.querySelectorAll(`[id^=payload-data-${recv_topic}-${i}]`).forEach((item)=>{
                                                            item.innerHTML = parsed_message.payload_data[i];                                  
                        });
                        document.querySelectorAll('[id^="chart payload-data"]').forEach((item)=>{
                                    
                                        let id = $(item).data('id');
                                        if (!id) return;
                                        for(let j in id.dev){
                                            if(id.dev[j]==recv_topic && id.sensor[j]==i){
                                                var graph = $(item).data('graph');
                                                graph.data.labels.push(parsed_message.recv_timestamp);
                                                graph.data.labels=[...new Set(graph.data.labels)];
                                                graph.data.labels.sort();
                                                // console.log(graph.data.labels);
                                                // graph.data.datasets[0].data.push(parsed_message.payload_data[i]);
                                                graph.data.datasets.forEach((item_data) => {
                                                    // console.log('plot1', item_data.id.dev, item_data.id.sensor);
                                                    if(item_data.id.dev == recv_topic && item_data.id.sensor == i){
                                                        // console.log('plot', recv_topic, i, parsed_message.recv_timestamp, parseFloat(parsed_message.payload_data[i]));
                                                        item_data.data.push({
                                                            x: parsed_message.recv_timestamp,
                                                            y: parseFloat(parsed_message.payload_data[i]) 
                                                        });
                                                    }
                                                    // else {
                                                    //     item.data.push({
                                                    //         x: parsed_message.recv_timestamp,
                                                    //         y: NaN
                                                    //     });
                                                    // }
                                                })
                                                graph.update(); 
                                            }
                                        }
                        });
                    }

                    clientStorage.setItem(STORAGE_KEY, JSON.stringify(storage));
                    // parsed_message.payload_data.forEach((item) => {
                    //     document.getElementById(`payload-data-${recv_topic[1]}-${item.key}`).innerHTML = item
                    // })
                    // parsed_message.recv_payload
                }
                catch(err){
                    console.log(err);
                }

            }

            // handle error
            function streaming_broker_error_handler(error)
            {
                console.log("Can't connect to streaming broker" + error);
                process.exit(1);
            }

            function timestamp_format(str){
                var arr = new Date(str).toLocaleString(NaN,{ hour12: false }).split(', ');
                arr[0] = arr[0].split('/');
                arr[0].pop();
                arr[0] = `${arr[0][0]}/${arr[0][1]}`
                arr[1] = arr[1].slice(0, 5);
                return `${arr[0]} ${arr[1]}`
            }
    </script>
    <%- include('../partials/libs.ejs') %>

</head>

<body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Navbar -->
        <%- include('../partials/navbar.ejs') %>
        <!-- End of Navbar -->

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">
            
            <!-- Main Content -->
            <div id="content">
                
                <!-- Topbar -->
                <%- include('../partials/header.ejs') %>
                <!-- End of Topbar -->

                <!-- Begin Page Content -->
                <div class="container-fluid">

                    <!-- Page Heading -->
                    <!-- Change Dashboard dropdown menu -->
                    <div class="d-sm-flex align-items-center justify-content-between mb-4">
                        <div class="nav-item dropdown">

                                <button class="btn btn-primary dropdown-toggle" id="changeDashboard"
                                role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <%if(board.length){%>
                                <%= board[0].value%>
                                <%}else{%>
                                    <%= 'No board yet'%>
                                <%}%>
                            </button>
                            <div class="dropdown-menu dropdown-menu-left animated--fade-in"
                            aria-labelledby="changeDashboard">
                                <% for(let i =0; i < board.length; i++){%>
                                <a class="dropdown-item"  onclick="selectBoard('<%=board[i].key%>', '<%=board[i].value%>')"><%=board[i].value%></a>
                                
                                <%}%>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="#" role="button" data-toggle="modal" data-target="#addBoardModal">
                                    <i class="fas fa-plus fa-sm text-gray-600"></i>&nbsp;<%= __('Add board') %>
                                </a>

                            </div>
                            <script>
                                function selectBoard(board_id, board_name){
                                    document.getElementById("changeDashboard").innerHTML = board_name;
                                    let row = $('[id^="board-"]');
                                    for(let i=0; i < row.length; i++){
                                        row[i].style = "display: none;";
                                    }
                                    document.getElementById(`board-${board_id}`).style = "display: visibility;";
                                    document.getElementById(`add-widget-board_id`).value = board_id;
                                }
                            </script>
                        </div>
                        <%if(board.length){%>
                            
                        
                        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"
                            role="button" data-toggle="modal" data-target="#addWidgetModal">
                        
                            <i class="fas fa-plus fa-sm text-white-50"></i>&nbsp;<%= __('Add widget') %>
                        </a>
                        <%}%>
                        <!-- Add Board Modal-->
                        <div class="modal fade" id="addBoardModal" tabindex="-1" role="dialog" aria-labelledby="addBoardModalLabel"
                        aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="addBoardModalLabel"><%= __('Add board') %></h5>
                                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <!-- action="device/configure" -->
                                        <form method="post" action="dashboard/add-board" class="user">
                                            <!-- Input type Text -->
                                            
                                            <label for="board_name"><%= __('Board name') %></label>
                                
                                            <div class="form-group">
                                                <input type="text" class="form-control form-control-user"
                                                    id="addWidgetName" aria-describedby="board_name"
                                                    placeholder="Enter Board name" name="board_name">
                                            </div>

                                            <input type="submit" id="add_board" value="Add board" class="btn btn-primary btn-user btn-block">
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button class="btn btn-secondary" type="button" data-dismiss="modal"><%= __('Cancel') %></button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Add Widget Modal-->
                        <div class="modal fade" id="addWidgetModal" tabindex="-1" role="dialog" aria-labelledby="addWidgetModalLabel"
                        aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="addWidgetModalLabel"><%= __('Add widget') %></h5>
                                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <!-- action="device/configure" -->
                                        <form method="post" action="dashboard/add-widget" class="user">
                                            <!-- Input type Text -->
                                            <label for="widget_name"><%= __('Widget name') %></label>
                                            <div class="form-group">
                                                <input type="hidden" id='add-widget-board_id' name='board_id' value="<%=board.length?board[0].key:''%>">
                                                
                                                <input type="text" class="form-control form-control-user"
                                                    id="addWidgetName" aria-describedby="widget_name"
                                                    placeholder="Enter Widget name" name="widget_name">
                                            </div>
                                            <hr class="mt-2 mb-3"/>
                                            <!-- Select type Select -->
                                            <label for="addWidgetType"><%= __('Widget type') %></label>
                                            <select class="form-control mb-4" id="addWidgetType" name="WidgetType" onchange="widgetTypeTrigger(this.value.split('-')[0]);">
                                                <%for(let i =0; i < widgetType.length; i++){%>
                                                <option value="<%=widgetType[i]._id%>-<%=widgetType[i].ui_config.numberOfDataSource.maxNumber%>"><%=widgetType[i].ui_config.type%></option>
                                                <%}%>
                                            </select>
                                            <%for(let i in widgetType){%>
                                                <%let jMax = widgetType[i].ui_config%>
                                                <%if(i!=0){%>
                                                    <div class="form-group" id="addWidgetType-group-<%=widgetType[i]._id%>" hidden>
                                                <%}else{%>
                                                    <div class="form-group" id="addWidgetType-group-<%=widgetType[i]._id%>">
                                                <%}%>
                                                <%for(let j in jMax.view){%>
                                                    
                                                    <%let kMax = jMax.view[j].domain%>
                                                    <label for="addWidgetType-<%=jMax.type%>-<%=j%>"><%=j%></label>
                                                    <select class="form-control mb-4" id="addWidgetType-<%=jMax.type%>-<%=j%>" name="addWidgetType-<%=widgetType[i]._id%>-<%=j%>">
                                                        <option selected value="">--Select <%=j%>--</option>
                                                    <%for(let k in kMax){%>
                                                        <option value="<%=kMax[k]%>"><%=kMax[k]%></option>
                                                    <%}%>
                                                    </select>
                                                <%}%>
                                                </div>
                                            <%}%>
                                            <script>
                                                function widgetTypeTrigger(val){
                                                    // console.log(val);
                                                    document.querySelectorAll('[id^=addWidgetType-group]').forEach((item)=>{
                                                        item.hidden = true;
                                                        
                                                    });
                                                    document.getElementById(`addWidgetType-group-${val}`).hidden = false;

                                                    document.getElementById('no_sensor').value = "1";
                                                    
                                                    var newNode = document.createElement('div');
                                                    newNode.className = 'form-group';
                                                    newNode.id = `addData-0`;
                                                    newNode.innerHTML = document.getElementById('addData-0').innerHTML;
                                                    document.getElementById("addData").innerHTML = '';
                                                    document.getElementById("addData").appendChild(newNode);
                                                    if(parseInt(document.getElementById('no_sensor').value) >= parseInt(document.getElementById('addWidgetType').value.split('-')[1])){
                                                        document.getElementById('addSensorButton').hidden = true;
                                                        return;
                                                    }
                                                    else document.getElementById('addSensorButton').hidden = false;
                                                }
                                            </script>
                                            <hr class="mt-2 mb-3"/>
                                            <!-- Select type Select -->
                                            <label for="addData"><%= __('Data') %></label>
                                            <input type="hidden" id="no_sensor" name="no_sensor_data" value="1" >
                                            
                                            <div class="form-group" id="addData">
                                                <div class="form-group" id="addData-0">
                                                    
                                                    <button class="close" type="button" onclick="deleteSensor('addData-0')">
                                                        <span aria-hidden="true">×</span>
                                                    </button>
                                                    
                                                    <select class="form-control mb-4" id="addDeviceData-0" name="DeviceData-0" onchange="addDeviceTrigger('Data-0')">
                                                        <option selected value="">--<%= __('Select device') %>--</option>
                                                        <%for(let i=0; i< sensor.length; i++){%>
                                                        <option value="<%=JSON.stringify(sensor[i])%>"><%=sensor[i].dev_id%></option>
                                                        
                                                        <%}%>
                                                    </select>
                                                    
                                                    <select class="form-control mb-4" id="addSensorData-0" name="SensorData-0">
                                                        <option selected value="">--<%= __('Select sensor') %>--</option>
                                                        <option value=""></option>
                                                        <!-- <option value="2">AIRHUMID</option>
                                                        <option value="3">ADC_CH0V</option> -->
                                                    </select>
                                                </div>
                                            </div>
                                            
                                            <a id="addSensorButton" onclick="add_sensor()" class="btn btn-primary btn-user btn-block"><%= __('Add more sensor') %> ...</a>
                                            <script>
                                                check_no_sensor();
                                                
                                                function deleteSensor(val){
                                                    no_sensor = parseInt(document.getElementById('no_sensor').value);
                                                    if(no_sensor > 1){
                                                        document.getElementById(val).remove();
                                                        no_sensor--;
                                                        document.getElementById('no_sensor').value = no_sensor;
                                                        document.getElementById('addSensorButton').hidden = false;
                                                    }

                                                    
                                                }
                                                

                                                function addDeviceTrigger(replace){
                                                    var sensor_list = JSON.parse(document.getElementById(`addDevice${replace}`).value).sensor_key_arr;
                                                    
                                                    var Sensordata = document.getElementById(`addSensor${replace}`);
                                                    Sensordata.innerHTML = '<option selected value="">--Select Sensor--</option>';
                                                    sensor_list.forEach((item)=>{
                                                        Sensordata.innerHTML += `<option value="${item}">${item}</option>`;
                                                    })
                                                }

                                                function check_no_sensor(){
                                                    if(parseInt(document.getElementById('no_sensor').value) >= parseInt(document.getElementById('addWidgetType').value.split('-')[1])){
                                                        document.getElementById('addSensorButton').hidden = true;
                                                        return;
                                                    }
                                                }

                                                function add_sensor(){
                                                    // mydiv.appendChild(document.createTextNode("bar"))

                                                    var no_sensor = parseInt(document.getElementById('no_sensor').value);
                                                    
                                                    var newNode = document.createElement('div');
                                                    newNode.className = 'form-group';
                                                    newNode.id = `addData-${no_sensor}`;
                                                    newNode.innerHTML = document.getElementById('addData-0').innerHTML.replaceAll('Data-0',`Data-${no_sensor}`);
                                                    no_sensor++;
                                                    document.getElementById('no_sensor').value = no_sensor;  
                                                              
                                                    document.getElementById("addData").appendChild(newNode);

                                                    check_no_sensor();

                                                    
                                                }
                                            </script>
                                            <hr class="mt-2 mb-3"/>
                                            <input type="submit" id="add_widget" value="Confirm changes" class="btn btn-primary btn-user btn-block">
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button class="btn btn-secondary" type="button" data-dismiss="modal"><%= __('Cancel') %></button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    

                    <!-- Content Row -->
                    <%for(let i=0; i< board.length ; i++){ %>
                        <%if(i==0){%>
                    <div class="row" id="board-<%=board[i].key%>">
                        <%}else{%>
                    <div class="row" id="board-<%=board[i].key%>" style="display: none;">
                        <%}%>
                        <!-- Widget Card Example -->
                        
                        <%for(let j=0; j< boardWidget.length; j++){ %>

                        <%if(boardWidget[j].b_board_id == board[i].key){%>
                            <%var config = boardWidget[j].config_dict; %>
                            <%if(config.type == 'Card'){%>
                                <div class="col-xl-3 col-md-6 mb-4">
                                    <div class="card border-left-<%=config.view['Color of card']%> shadow h-100 py-2">
                                        <div class="card-body">
                                            <div class="row no-gutters align-items-center">
                                                <div class="col mr-2">
                                                    <div class="text-xs font-weight-bold text-<%=config.view['Color of card']%> text-uppercase mb-1">
                                                        <%=boardWidget[j].w_display_name%></div>
                                                    <div class="h5 mb-0 font-weight-bold text-gray-800" id="payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-<%=boardWidget[j].w_id%>">___</div>  <!--31.2&#176;C -->
                                                    <div class="p mb-0 text-gray-800" id="timestamp-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-<%=boardWidget[j].w_id%>"><%= __('Last updated') %>: ___</div>
                                                </div>
                                                <div class="col-auto">
                                                    <div class="dropdown no-arrow">
                                                        <a class="dropdown-toggle" href="#" role="button" id="<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-<%=boardWidget[j].w_id%>-configure"
                                                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                                        </a>
                                                        <!-- Configure dropdown menu -->
                                                        <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                          aria-labelledby="<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-configure">

                                                            <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editWidgetModal"
                                                            onclick="openEditWidgetModal('<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>%>')"><%= __('Configure widget') %></a>

                                                            <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deleteWidgetModal"
                                                            onclick="openDeleteWidgetModal('<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>')"><%= __('Delete widget') %></a>
                                                            <script>
                                                                function openEditWidgetModal(widget_id) {
                                                                    var str = "Widget ID: " + widget_id;
                                                                    $("#widget_id").html(str);
                                                                    document.getElementById(`edit-widget_id`).value = widget_id;
                                                                }

                                                                function openDeleteWidgetModal(widget_id) {
                                                                    document.getElementById(`delete-widget_id`).value = widget_id;
                                                                }
                                                            </script>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                        
                       <!------------------------------------------------------------------------------------------------------------------------>


                              
                            <%}else if(config.type == 'Chart'){%>
                                <div class="card shadow col-md-12 mb-4">
                        
                                    <div
                                        class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                        <h6 class="m-0 font-weight-bold text-<%=config.view['Color of line']%>"><%=boardWidget[j].w_display_name%></h6>
                                        <div class="dropdown no-arrow">
                                            <a class="dropdown-toggle" role="button" id="dropdownMenuLink"
                                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                            </a>
                                            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                aria-labelledby="dropdownMenuLink">
                                                <div class="dropdown-header">Dropdown Header:</div>
                                                <a class="dropdown-item" href="#">Action</a>
                                                <a class="dropdown-item" href="#">Another action</a>
                                                <div class="dropdown-divider"></div>
                                                <a class="dropdown-item" href="#">Something else here</a>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="card-body">
                                        <div class="chart-area">
                                            <%let tmp1 = boardWidget[j]%>
                                            <%let tmp = ''%>
                                            <%let arr = []%>
                                            
                                            <%for(let k = 0; k < tmp1.e_dev_id.length; k++){%>
                                                <%tmp+=`${tmp1.e_dev_id[k]} ${tmp1.s_sensor_key[k]} `%>
                                                <%arr.push({dev: tmp1.e_dev_id[k], sensor: tmp1.s_sensor_key[k]})%>
                                                
                                            <%}%>
                                            <canvas id="chart payload-data <%=tmp%><%=boardWidget[j].w_id%>"></canvas>
                                            <script>
                                                $("#chart payload-data <%=tmp%><%=boardWidget[j].w_id%>").data('id', {
                                                    deviceSensor: '<%= arr.toString%>'.split(',')
                                                });  
                                            </script>
                                        </div>
                                    </div>
                                    
                                </div>
                                
                            <%}else if(config.type == "Thresholds"){%>
                                <div class="card shadow mb-4">
                        
                                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                        <h6 class="m-0 font-weight-bold text-primary">Thresholds</h6>
                                        <div class="dropdown no-arrow">
                                            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                            </a>
                                            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                aria-labelledby="dropdownMenuLink">
                                                <div class="dropdown-header">Dropdown Header:</div>
                                                <a class="dropdown-item" href="#">Action</a>
                                                <a class="dropdown-item" href="#">Another action</a>
                                                <div class="dropdown-divider"></div>
                                                <a class="dropdown-item" href="#">Something else here</a>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="card-body">
                                        <div class="mb-1 small">Temperature</div>
                                        <div class="progress mb-4">
                                            <div class="progress-bar" role="progressbar" style="width: 62.4%"
                                                aria-valuenow="31.2" aria-valuemin="0" aria-valuemax="50">31.2&#176;C</div>
                                        </div>
                                        <div class="mb-1 small">Humidity</div>
                                        <div class="progress mb-4">
                                            <div class="progress-bar" role="progressbar" style="width: 58.5%"
                                                aria-valuenow="58.5" aria-valuemin="0" aria-valuemax="100">58.5%</div>
                                        </div>
            
                                    </div>
                                </div>
                            
                            
                            <%}%>

                        <%}%>
                        <%}%>
                        
                    </div>
                    
                    <%}%>
                    <!-- <div class="card shadow col-md-12 mb-4">
                        
                        <div
                            class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                            <h6 class="m-0 font-weight-bold text-primary">xzccz</h6>
                            <div class="dropdown no-arrow">
                                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                </a>
                                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                    aria-labelledby="dropdownMenuLink">
                                    <div class="dropdown-header">Dropdown Header:</div>
                                    <a class="dropdown-item" href="#">Action</a>
                                    <a class="dropdown-item" href="#">Another action</a>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item" href="#">Something else here</a>
                                </div>
                            </div>
                        </div>
                        
                        <div class="card-body">
                            <div class="chart-area">
                                <canvas id="myAreaChart"></canvas>
                                
                            </div>
                        </div>
                        
                    </div> -->

                    
                </div>

                <!-- /.container-fluid -->

            </div>
            <!-- End of Main Content -->

            <!-- Footer -->
            <%- include ('../partials/footer.ejs') %>
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Global Modals-->
    <!-- Configure Widget Modals for unique Widgets -->
    <div class="modal fade" id="editWidgetModal" tabindex="-1"
        role="dialog" aria-labelledby="configureSensorModalLabel" aria-hidden="true">

        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal header -->
                <div class="modal-header">
                    <h5 class="modal-title" id="configureSensorModalLabel"><%= __('Configure widget') %></h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="modal-body">
                    <p id="widget_id">Widget ID: temp</p>
                    <hr>
                    <!-- action="widget/configure" -->
                    <form method="post" action="" class="user">
                        <input type="text" class="form-control form-control-user" id='edit-widget_id' value="">
                        <!-- Input type Text -->
                        <label for="widget_name"><%= __('Widget name') %></label>
                        <div class="form-group">
                            <input type="text" class="form-control form-control-user" id="configureWidgetName"
                                aria-describedby="widget_name" placeholder="Enter Widget name" name="widget_name">
                        </div>
                        <!-- Input type Select -->
                        <label for="configureSensorData"><%= __('Display data') %></label>
                        <select class="form-control mb-4" id="configureSensorData">
                            <option selected value="1">Temperature</option>
                            <option value="2">Hudmidity</option>
                            <option value="3">Bat5V</option>
                        </select>
                        <input type="submit" id="widget_confirm" value="Confirm changes" class="btn btn-primary btn-user btn-block">
                        <hr>
                    </form>
                </div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal"><%= __('Cancel') %></button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Widget Modals for unique Widgets -->
    <div class="modal fade" id="deleteWidgetModal" tabindex="-1"
        role="dialog" aria-labelledby="deleteWidgetModalLabel" aria-hidden="true">

        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal header -->
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteWidgetModalLabel"><%= __('Delete this widget?') %></h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="modal-body">Select <b style="color: #2F69CA">Delete</b> button to remove this widget from the board.
                </div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal"><%= __('Delete') %></button>
                    <!-- action="widget/delete" -->
                    <form method="post" action="" class="user">
                        <input type="hidden" class="form-control form-control-user" id='delete-widget_id' value="">
                        <button class="btn btn-primary" type="submit"><%= __('Cancel') %></button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal header -->
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel"><%= __('Ready to leave?') %></h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="modal-body"><%= __('Select Logout below if you are ready to end your current session') %>.</div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal"><%= __('Cancel') %></button>
                    
                    <form action="../login/logout" method="post">
                        <!-- <a  onclick="this.parentNode.submit();">Logout</a> -->
                        <input type="submit" class="btn btn-primary" onclick='clientStorage.removeItem(STORAGE_KEY);' value="<%= __('Logout') %>">
                    </form>
                </div>
            </div>
        </div>
    </div> 
    
    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <!-- Global level plugins --> 
    <%- include('../partials/script.ejs') %>

    <!-- Page level plugins -->
    <script src="vendor/chart.js/Chart.min.js"></script>
    
    <!-- Page level custom scripts -->
    <script src="js/visuals/chart-area-demo.js"></script>
    <!-- <script src="js/visuals/chart-pie-demo.js"></script> -->
    <script>
    // var payload_data = JSON.parse(window.localStorage.getItem('payload-data')) ;
            
            //     for(var i in payload_data){
            //         for(var j in payload_data[i]){
            //             document.getElementById(`payload-data-${i}-${j}`).innerHTML = payload_data[i][j];
            //         }
                    
            //     }
            document.querySelectorAll('[id^="chart payload-data"]').forEach((item)=>{
                var data = $(item).attr('id').split(' ');
                data.shift();
                data.shift();
                data.pop();
                // console.log(data);
                // var ctx = document.getElementById("myAreaChart");
                // var graph = new Chart(item, 
                
                let properties = {
                    type: 'line',
                    data: {
                        labels: [],
                        datasets: [
                        //     {
                        // label: "",
                        // lineTension: 0.3,
                        // backgroundColor: "rgba(78, 115, 223, 0.05)",
                        // borderColor: "rgba(78, 115, 223, 1)",
                        // pointRadius: 3,
                        // pointBackgroundColor: "rgba(78, 115, 223, 1)",
                        // pointBorderColor: "rgba(78, 115, 223, 1)",
                        // pointHoverRadius: 3,
                        // pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                        // pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                        // pointHitRadius: 10,
                        // pointBorderWidth: 2,
                        // data: [],
                        // }
                    ],
                    },
                    options: {
                        spanGaps: true,
                        maintainAspectRatio: false,
                        layout: {
                            padding: {
                                left: 10,
                                right: 25,
                                top: 25,
                                bottom: 0
                            }
                        },
                        scales: {
                            xAxes: [{
                                time: {
                                unit: 'date'
                                },
                                gridLines: {
                                display: false,
                                drawBorder: false
                                },
                                ticks: {
                                maxTicksLimit: 7
                                }
                            }],
                            yAxes: [{
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Temperature (°C)'
                                },
                                ticks: {
                                    maxTicksLimit: 5,
                                    padding: 10,
                                    // Include a dollar sign in the ticks
                                    callback: function(value, index, values) {
                                        return number_format(value, 2);
                                    }
                                },
                                gridLines: {
                                    color: "rgb(234, 236, 244)",
                                    zeroLineColor: "rgb(234, 236, 244)",
                                    drawBorder: true,
                                    borderDash: [2],
                                    zeroLineBorderDash: [2]
                                }
                            }],
                        },
                        legend: {
                        display: true
                        },
                        tooltips: {
                            backgroundColor: "rgb(255,255,255)",
                            bodyFontColor: "#858796",
                            titleMarginBottom: 10,
                            titleFontColor: '#6e707e',
                            titleFontSize: 14,
                            borderColor: '#dddfeb',
                            borderWidth: 1,
                            xPadding: 15,
                            yPadding: 15,
                            displayColors: false,
                            intersect: false,
                            mode: 'index',
                            caretPadding: 10,
                            callbacks: {
                                label: function(tooltipItem, chart) {
                                var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                return datasetLabel + ': ' + number_format(tooltipItem.yLabel, 2);
                                }
                            }
                        }
                    }
                }
                let deviceSensor = {
                    dev: [],
                    sensor: []
                };
                let color = [{backgroundColor: 'rgba(78, 115, 223, 0.05)', borderColor: 'rgba(78, 115, 223, 1)'},
                {backgroundColor: 'rgba(222, 85, 78, 0.05)', borderColor: 'rgba(222, 85, 78, 1)'},
                {backgroundColor: 'rgba(78, 222, 122, 0.05)', borderColor: 'rgba(78, 222, 122, 1)'}]
                for(let i=0; i < data.length; i+=2){
                    deviceSensor.dev.push(data[i]);
                    deviceSensor.sensor.push(data[i+1]);
                    properties.data.datasets.push({
                        id: {
                            dev: data[i],
                            sensor: data[i+1]
                        },
                        label: `${data[i+1]} (${data[i]})`,
                        lineTension: 0.3,
                        backgroundColor: color[i/2].backgroundColor,
                        borderColor: color[i/2].borderColor,
                        pointRadius: 3,
                        pointBackgroundColor: color[i/2].borderColor,
                        pointBorderColor: color[i/2].borderColor,
                        pointHoverRadius: 3,
                        pointHoverBackgroundColor: color[i/2].borderColor,
                        pointHoverBorderColor: color[i/2].borderColor,
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                        data: [],
                    });
                    properties.options.scales.yAxes[0].scaleLabel.labelString = '';
                }
                var graph = new Chart(item, properties);
                $(item).data('graph', graph); 
                $(item).data('id', deviceSensor); 
                                            
            }); 
    </script>
</body>

</html>