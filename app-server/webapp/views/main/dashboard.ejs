<!DOCTYPE html>
<html lang="en">
<head>

    <title>LoraWAN TestBed - <%=title%></title>
 
    <script src="https://unpkg.com/mqtt@4.2.8/dist/mqtt.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="js/base64ArrayBuffer.js"></script>
    <!-- <link rel="stylesheet" href="./../../public/stylesheets/dashboard.css"> -->

    <!-- Global level stylesheet -->
    <%- include('../partials/libs.ejs') %>

</head>

<body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Navbar -->
        <%- include('../partials/navbar.ejs') %>
        <!-- End of Navbar -->

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">
            
            <!-- Main Content -->
            <div id="content">
                
                <!-- Topbar -->
                <%- include('../partials/header.ejs') %>
                <!-- End of Topbar -->

                <!-- Begin Page Content -->
                <div class="container-fluid">

                    <!-- Page Heading -->
                    <!-- Change Dashboard dropdown menu -->
                    <div class="d-sm-flex align-items-center justify-content-between mb-4">
                        <div class="nav-item dropdown">

                                <button class="btn btn-primary dropdown-toggle" id="changeDashboard"
                                role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <%if(board.length){%>
                                <%= board[0].value%>
                                <%}else{%>
                                    <%= 'No board yet'%>
                                <%}%>
                            </button>
                            <div class="dropdown-menu dropdown-menu-left animated--fade-in"
                            aria-labelledby="changeDashboard">
                                <% for(let i =0; i < board.length; i++){%>
                                <a class="dropdown-item"  onclick="selectBoard('<%=board[i].key%>', '<%=board[i].value%>')"><%=board[i].value%></a>
                                
                                <%}%>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="#" role="button" data-toggle="modal" data-target="#addBoardModal">
                                    <i class="fas fa-plus fa-sm text-gray-600"></i>&nbsp;<%= __('Add board') %>
                                </a>

                            </div>
                            
                            <script>
                                function selectBoard(board_id, board_name){
                                    document.getElementById("changeDashboard").innerHTML = board_name;
                                    let row = $('[id^="board-"]');
                                    for(let i=0; i < row.length; i++){
                                        row[i].style = "display: none;";
                                    }
                                    document.getElementById(`board-${board_id}`).style = "display: visibility;";
                                    document.getElementById(`add-widget-board_id`).value = board_id;
                                    document.getElementById(`delete-board_id`).value = board_id;
                                    document.getElementById(`config-board_id`).value = board_id;
                                    // console.log(document.getElementById(`delete-board_id`).value)
                                }
                            </script>
                            <%if(board.length){%>
                            
                            <div class="d-none d-sm-inline-block btn btn-sm">
                                <div class="dropdown no-arrow">
                                    <a class="dropdown-toggle" href="#" role="button" id="this-board-configure"
                                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                    </a>
                                    <!-- Configure dropdown menu -->
                                    <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                    aria-labelledby="this-board-configure">
                                        <a class="dropdown-item"
                                        role="button" data-toggle="modal" data-target="#configBoardModal">
            
                                        <i class="fas fa-pen fa-sm text-black-50"></i>&nbsp;<%= __('Config this board') %>
                                        </a>
            
                                        <a class="dropdown-item"
                                        role="button" data-toggle="modal" data-target="#deleteBoardModal">
            
                                        <i class="fas fa-times fa-sm text-black-50"></i>&nbsp;<%= __('Delete this board') %>
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <%} %>
                        </div>
                        
                        <%if(board.length){%>
                            
                        
                        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"
                            role="button" data-toggle="modal" data-target="#addWidgetModal">
                        
                            <i class="fas fa-plus fa-sm text-white-50"></i>&nbsp;<%= __('Add widget') %>
                        </a>
                        <%}%>
                        <!-- Add Board Modal-->
                        <div class="modal fade" id="addBoardModal" tabindex="-1" role="dialog" aria-labelledby="addBoardModalLabel"
                        aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="addBoardModalLabel"><%= __('Add board') %></h5>
                                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <!-- action="device/configure" -->
                                        <form method="post" action="dashboard/add-board" class="user">
                                            <!-- Input type Text -->
                                            
                                            <label for="board_name"><%= __('Board name') %></label>
                                
                                            <div class="form-group">
                                                <input type="text" class="form-control form-control-user"
                                                    id="addWidgetName" aria-describedby="board_name"
                                                    placeholder="Enter Board name" name="board_name">
                                            </div>

                                            <input type="submit" id="add_board" value="Add board" class="btn btn-primary btn-user btn-block">
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button class="btn btn-outline-dark" type="button" data-dismiss="modal"><%= __('Cancel') %></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <%if(board.length){%>
                        <!-- Config Board Modal-->
                        <div class="modal fade" id="configBoardModal" tabindex="-1" role="dialog" aria-labelledby="configBoardModalLabel"
                        aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="configBoardModalLabel"><%= __('Add board') %></h5>
                                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <!-- action="device/configure" -->
                                        <form method="post" action="dashboard/config-board" class="user">
                                            <!-- Input type Text -->
                                            
                                            <label for="board_name"><%= __('Board name') %></label>
                                
                                            <div class="form-group">
                                                <input type="text" class="form-control form-control-user"
                                                    id="configBoardName" aria-describedby="board_name"
                                                    placeholder="Enter Board name" name="board_name">
                                            </div>
                                            <input type="hidden" class="form-control form-control-user" name="board_id" id='config-board_id' value="<%= board[0].key%>">
                                            <input type="submit" id="add_board" value="<%= __('Confirm changes') %>" class="btn btn-primary btn-user btn-block">
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button class="btn btn-outline-dark" type="button" data-dismiss="modal"><%= __('Cancel') %></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Delete Board Modal-->
                        <div class="modal fade" id="deleteBoardModal" tabindex="-1"
                            role="dialog" aria-labelledby="deleteBoardModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <!-- Modal header -->
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteBoardModalLabel"><%= __('Delete this board?') %></h5>
                                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                    </div>
                                    <!-- Modal body -->
                                    <div class="modal-body">Select <b style="color: #2F69CA">Delete</b> button to remove this board.
                                    </div>
                                    <!-- Modal footer -->
                                    <div class="modal-footer">
                                        <!-- <button class="btn btn-secondary" type="button" data-dismiss="modal"><%= __('Delete') %></button> -->
                                        <!-- action="widget/delete" -->
                                        <form method="post" action="dashboard/delete-board" class="user">
                                            
                                            <input type="hidden" class="form-control form-control-user" name="board_id" id='delete-board_id' value="<%= board[0].key%>">
                                            
                                            <button class="btn btn-primary" type="submit"><%= __('Delete') %></button>
                                        </form>
                                        <button class="btn btn-outline-dark" type="button" data-dismiss="modal"><%= __('Cancel') %></button>  
                    
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <%}%>
                        <!-- Add Widget Modal-->
                        <div class="modal fade" id="addWidgetModal" tabindex="-1" role="dialog" aria-labelledby="addWidgetModalLabel"
                        aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="addWidgetModalLabel"><%= __('Add widget') %></h5>
                                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <!-- action="device/configure" -->
                                        <form method="post" action="dashboard/add-widget" class="user">
                                            <!-- Input type Text -->
                                            <label for="widget_name"><%= __('Widget name') %></label>
                                            <div class="form-group">
                                                <input type="hidden" id='add-widget-board_id' name='board_id' value="<%=board.length?board[0].key:''%>">
                                                
                                                <input type="text" class="form-control form-control-user"
                                                    id="addWidgetName" aria-describedby="widget_name"
                                                    placeholder="Enter Widget name" name="widget_name">
                                            </div>
                                            <hr class="mt-2 mb-3"/>
                                            <!-- Select type Select -->
                                            <label for="addWidgetType"><%= __('Widget type') %></label>
                                            <select class="form-control mb-4" id="addWidgetType" name="WidgetType" onchange="widgetTypeTrigger(this.value.split('-')[0]);">
                                                <%try {%>
                                                <%for(let i =0; i < widgetType.length; i++){%>
                                                <option value="<%=widgetType[i]._id%>-<%=widgetType[i].ui_config.numberOfDataSource.maxNumber%>"><%=widgetType[i].ui_config.type%></option>
                                                <%}%>
                                                <%} catch (error) {}%>
                                            </select>
                                            <%try {%>
                                            <%for(let i in widgetType){%>
                                                <%let jMax = widgetType[i].ui_config%>
                                                <%if(i!=0){%>
                                                    <div class="form-group" id="addWidgetType-group-<%=widgetType[i]._id%>" hidden>
                                                <%}else{%>
                                                    <div class="form-group" id="addWidgetType-group-<%=widgetType[i]._id%>">
                                                <%}%>
                                                <%try {%>
                                                <%for(let j in jMax.view){%>
                                                    
                                                    <%let kMax = jMax.view[j].domain%>
                                                    <label for="addWidgetType-<%=jMax.type%>-<%=j%>"><%=j%></label>
                                                    <select class="form-control mb-4" id="addWidgetType-<%=jMax.type%>-<%=j%>" name="addWidgetType-<%=widgetType[i]._id%>-<%=j%>">
                                                        <option selected value="">--Select <%=j%>--</option>
                                                    <%for(let k in kMax){%>
                                                        <option value="<%=kMax[k]%>"><%=kMax[k]%></option>
                                                    <%}%>
                                                    </select>
                                                <%}%>
                                                <%} catch (error) {}%>
                                                </div>
                                            <%}%>
                                            <%} catch (error) {}%>
                                            <script>
                                                function widgetTypeTrigger(val){
                                                    // console.log(val);
                                                    document.querySelectorAll('[id^=addWidgetType-group]').forEach((item)=>{
                                                        item.hidden = true;
                                                        
                                                    });
                                                    document.getElementById(`addWidgetType-group-${val}`).hidden = false;
                                                    document.getElementById('no_sensor').value = "1";
                                                    
                                                    var newNode = document.createElement('div');
                                                    newNode.className = 'form-group';
                                                    newNode.id = `addData-0`;
                                                    newNode.innerHTML = document.getElementById('addData-0').innerHTML;
                                                    document.getElementById("addData").innerHTML = '';
                                                    document.getElementById("addData").appendChild(newNode);
                                                    if(parseInt(document.getElementById('no_sensor').value) >= parseInt(document.getElementById('addWidgetType').value.split('-')[1])){
                                                        document.getElementById('addSensorButton').hidden = true;
                                                        return;
                                                    }
                                                    else document.getElementById('addSensorButton').hidden = false;
                                                }
                                            </script>
                                            <hr class="mt-2 mb-3"/>
                                            <!-- Select type Select -->
                                            <label for="addData"><%= __('Data') %></label>
                                            <input type="hidden" id="no_sensor" name="no_sensor_data" value="1" >
                                            
                                            <div class="form-group" id="addData">
                                                <div class="form-group" id="addData-0">
                                                    
                                                    <button class="close" type="button" onclick="deleteSensor('addData-0')">
                                                        <span aria-hidden="true">×</span>
                                                    </button>
                                                    
                                                    <select class="form-control mb-4" id="addDeviceData-0" name="DeviceData-0" onchange="addDeviceTrigger('Data-0')">
                                                        <option selected value="">--<%= __('Select device') %>--</option>
                                                        <%try {%>
                                                        <%for(let i=0; i< sensor.length; i++){%>
                                                        <option value="<%=JSON.stringify(sensor[i])%>"><%=sensor[i].dev_id%></option>
                                                        
                                                        <%}%>
                                                        <%} catch (error) {}%>
                                                    </select>
                                                    
                                                    <select class="form-control mb-4" id="addSensorData-0" name="SensorData-0">
                                                        <option selected value="">--<%= __('Select sensor or controller') %>--</option>
                                                        <option value=""></option>
                                                    </select>
                                                </div>
                                            </div>
                                            
                                            <a id="addSensorButton" onclick="add_sensor()" class="btn btn-outline-secondary btn-user btn-block"><%= __('Add more sensor') %> ...</a>
                                            <script>
                                                check_no_sensor();
                                                
                                                function deleteSensor(val){
                                                    no_sensor = parseInt(document.getElementById('no_sensor').value);
                                                    if(no_sensor > 1){
                                                        document.getElementById(val).remove();
                                                        no_sensor--;
                                                        document.getElementById('no_sensor').value = no_sensor;
                                                        document.getElementById('addSensorButton').hidden = false;
                                                    }
                                                    
                                                }
                                                
                                                function addDeviceTrigger(replace){
                                                    var sensor_list = JSON.parse(document.getElementById(`addDevice${replace}`).value).sensor_arr;
                                                    
                                                    var Sensordata = document.getElementById(`addSensor${replace}`);
                                                    Sensordata.innerHTML = `<option selected value="">--<%= __('Select sensor or controller') %>--</option>`;
                                                    sensor_list.forEach((item)=>{
                                                        Sensordata.innerHTML += `<option value="${item.sensor_key}">${item.sensor_key} (${item.sensor_type})</option>`;
                                                    })
                                                }
                                                function check_no_sensor(){
                                                    if(parseInt(document.getElementById('no_sensor').value) >= parseInt(document.getElementById('addWidgetType').value.split('-')[1])){
                                                        document.getElementById('addSensorButton').hidden = true;
                                                        return;
                                                    }
                                                }
                                                function add_sensor(){
                                                    // mydiv.appendChild(document.createTextNode("bar"))
                                                    var no_sensor = parseInt(document.getElementById('no_sensor').value);
                                                    
                                                    var newNode = document.createElement('div');
                                                    newNode.className = 'form-group';
                                                    newNode.id = `addData-${no_sensor}`;
                                                    newNode.innerHTML = document.getElementById('addData-0').innerHTML.replaceAll('Data-0',`Data-${no_sensor}`);
                                                    no_sensor++;
                                                    document.getElementById('no_sensor').value = no_sensor;  
                                                              
                                                    document.getElementById("addData").appendChild(newNode);
                                                    check_no_sensor();
                                                    
                                                }
                                            </script>
                                            <hr class="mt-2 mb-3"/>
                                            <input type="submit" id="add_widget" value="Confirm changes" class="btn btn-primary btn-user btn-block">
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button class="btn btn-outline-dark" type="button" data-dismiss="modal"><%= __('Cancel') %></button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>                
                
                    <!-- Content Row -->
                    <%try {%>
                    <%for(let i=0; i< board.length ; i++){ %>
                        <%if(i==0){%>
                    <div class="row" id="board-<%=board[i].key%>">
                        <%}else{%>
                    <div class="row" id="board-<%=board[i].key%>" style="display: none;">
                        <%}%>
                        
                        <%try {%>
                        
                        <%for(let j=0; j< boardWidget.length; j++){ %>
                            <%if(boardWidget[j].b_board_id == board[i].key){%>
                                <%var config = boardWidget[j].config_dict; %>
                                <!-- Card -->
                                
                                <%if(config.type == 'Card'){%>
                                    <div class="col-xl-3 col-md-6 mb-4 dashboard-card">
                                        <div class="card border-left-<%=config.view['Color of card']%> shadow h-100 py-2">
                                            <div class="card-body">
                                                <div class="row no-gutters align-items-center">
                                                    <div class="col mr-2">
                                                        <div class="text-xs font-weight-bold text-<%=config.view['Color of card']%> text-uppercase mb-1">
                                                            <%=boardWidget[j].w_display_name%></div>
                                                        <div class="h5 mb-0 text-gray-800"><span class="font-weight-bold" id="payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-<%=boardWidget[j].w_id%>">___</span> <span> <i><%=boardWidget[j].sensor_config[0].unit%></i> </span></div>  <!--31.2&#176;C -->
                                                        <div class="p mb-0 text-xs text-black-50" id="timestamp-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-<%=boardWidget[j].w_id%>"><%= __('Last updated') %>: ___</div>
                                                    </div>
                                                    <div class="col-auto">
                                                        <div class="dropdown no-arrow">
                                                            <a class="dropdown-toggle" href="#" role="button" id="<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-<%=boardWidget[j].w_id%>-configure"
                                                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                                            </a>
                                                            <!-- Configure dropdown menu -->
                                                            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                            aria-labelledby="<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-configure">
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editWidgetModal"
                                                                onclick="openEditWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Configure widget') %></a>
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deleteWidgetModal"
                                                                onclick="openDeleteWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Delete widget') %></a>
                                                                <script>
                                                                    function openEditWidgetModal(widget_id) {
                                                                        var str = "Widget ID: " + widget_id;
                                                                        $("#widget_id").html(str);
                                                                        document.getElementById(`edit-widget_id`).value = widget_id;
                                                                    }
                                                                    function openDeleteWidgetModal(widget_id) {
                                                                        document.getElementById(`delete-widget_id`).value = widget_id;
                                                                    }
                                                                </script>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                
                                <!------------------------------------------------------------------------------------------------------------------------>
                                <%}else if(config.type == 'Chart'){%>
                                    <div class="col-xl-12 col-md-6">
                                        <div class="card shadow mb-4">
                            

                                        <div
                                            class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                            <h6 class="m-0 font-weight-bold text-<%=config.view['Color of line']%>"><%=boardWidget[j].w_display_name%></h6>
                                            <div class="dropdown no-arrow">
                                                <a class="dropdown-toggle" role="button" id="dropdownMenuLink"
                                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                    aria-labelledby="dropdownMenuLink">
                                                    <!-- <div class="dropdown-header">Dropdown Header:</div> -->
                                                    <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editWidgetModal"
                                                                onclick="openEditWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Configure widget') %></a>
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deleteWidgetModal"
                                                                onclick="openDeleteWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Delete widget') %></a>
                                                                <script>
                                                                    function openEditWidgetModal(widget_id) {
                                                                        var str = "Widget ID: " + widget_id;
                                                                        $("#widget_id").html(str);
                                                                        document.getElementById(`edit-widget_id`).value = widget_id;
                                                                    }
                                                                    function openDeleteWidgetModal(widget_id) {
                                                                        document.getElementById(`delete-widget_id`).value = widget_id;
                                                                    }
                                                                </script>
                                                    <!-- <div class="dropdown-divider"></div>
                                                    <a class="dropdown-item" href="#">Something else here</a> -->

                                            <div
                                                class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                                <h6 class="m-0 font-weight-bold text-<%=config.view['Color of line']%>"><%=boardWidget[j].w_display_name%></h6>
                                                <div class="dropdown no-arrow">
                                                    <a class="dropdown-toggle" role="button" id="dropdownMenuLink"
                                                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                                    </a>
                                                    <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                        aria-labelledby="dropdownMenuLink">
                                                        <!-- <div class="dropdown-header">Dropdown Header:</div> -->
                                                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editWidgetModal"
                                                                    onclick="openEditWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Configure widget') %></a>
    
                                                                    <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deleteWidgetModal"
                                                                    onclick="openDeleteWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Delete widget') %></a>
                                                                    <script>
                                                                        function openEditWidgetModal(widget_id) {
                                                                            var str = "Widget ID: " + widget_id;
                                                                            $("#widget_id").html(str);
                                                                            document.getElementById(`edit-widget_id`).value = widget_id;
                                                                        }
    
                                                                        function openDeleteWidgetModal(widget_id) {
                                                                            document.getElementById(`delete-widget_id`).value = widget_id;
                                                                        }
                                                                    </script>
                                                        <!-- <div class="dropdown-divider"></div>
                                                        <a class="dropdown-item" href="#">Something else here</a> -->
                                                    </div>

                                                </div>
                                            </div>
                                            
                                            <div class="card-body">
                                                <div class="chart-area">
                                                    <%let tmp1 = boardWidget[j]%>
                                                    <%let tmp = ''%>
                                                    <%let arr = []%>
                                                    
                                                    <%for(let k = 0; k < tmp1.e_dev_id.length; k++){%>
                                                        <%tmp+=`${tmp1.e_dev_id[k]} ${tmp1.s_sensor_key[k]} `%>
                                                        <%arr.push({dev: tmp1.e_dev_id[k], sensor: tmp1.s_sensor_key[k]})%>
                                                        
                                                    <%}%>
                                                    <canvas id="chart payload-data <%=tmp%><%=boardWidget[j].w_id%>"></canvas>
                                                    <script>
                                                        $("#chart payload-data <%=tmp%><%=boardWidget[j].w_id%>").data('id', {
                                                            deviceSensor: '<%= arr.toString%>'.split(',')
                                                        });  
                                                    </script>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                
                                <!------------------------------------------------------------------------------------------------------------------------>
                                <%}else if(config.type == "Thresholds"){%>
                                <div class="col-xl-2 col-md-6 mb-4">
                                    <div class="card shadow">
                                        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                            <h6 class="m-0 font-weight-bold text-primary">Thresholds</h6>
                                            <div class="dropdown no-arrow">
                                                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                    aria-labelledby="dropdownMenuLink">
                                                    <div class="dropdown-header">Dropdown Header:</div>
                                                    <a class="dropdown-item" href="#">Action</a>
                                                    <a class="dropdown-item" href="#">Another action</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a class="dropdown-item" href="#">Something else here</a>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="card-body">
                                            <div class="mb-1 small">Temperature</div>
                                            <div class="progress mb-4">
                                                <div class="progress-bar" role="progressbar" style="width: 62.4%"
                                                    aria-valuenow="31.2" aria-valuemin="0" aria-valuemax="50">31.2&#176;C</div>
                                            </div>
                                            <div class="mb-1 small">Humidity</div>
                                            <div class="progress">
                                                <div class="progress-bar" role="progressbar" style="width: 58.5%"
                                                    aria-valuenow="58.5" aria-valuemin="0" aria-valuemax="100">58.5%</div>
                                            </div>
                
                                        </div>
                                    </div>
                                </div>
                                
                                <!------------------------------------------------------------------------------------------------------------------------>
                                <%}else if(config.type == 'Button'){%>
                                    <div class="col-xl-2 col-md-6 mb-4 dashboard-card">
                                        <div class="card shadow py-0">
                                            <div class="card-body text-center">
                                                <div class="d-inline no-gutters">
                                                    <div class="col mr-2">
                                                        <div class="text-xs font-weight-bold text-primary text-uppercase text-center">
                                                            <%=boardWidget[j].w_display_name%>
                                                        </div>
                                                        <div class="p mb-0 text-xs text-black-50" id="buttontime-payload-data-<%=boardWidget[j].w_id%>">
                                                            UPDATED
                                                        </div>
                                                        <!-- <hr class="sidebar-divider"> -->
                                                        <div class="mt-2">
                                                            <button  id="btn-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>"
                                                                class="btn btn-<%=config.view['Color of button']%> shadow-sm controller" role="button"
                                                                onclick="buttonManager('<%=boardWidget[j].e_dev_id[0]%>',
                                                                '<%=JSON.stringify(boardWidget[j].sensor_config)%>',
                                                                '<%=boardWidget[j].w_id%>')">
                                                                <span class="text text-med"><%= __('Trigger') %></span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                <%}else if(config.type == 'Switch 1'){%>
                                    <div class="col-xl-2 col-md-6 mb-4 dashboard-card">
                                        <div class="card shadow h-100 py-0">
                                            <div class="card-body">
                                                <div class="row no-gutters">
                                                    <div class="col mr-2">
                                                        <div class="text-xs font-weight-bold text-primary text-uppercase text-center">
                                                            <%=boardWidget[j].w_display_name%></div>
                                                        <hr class="sidebar-divider">
                                                        <div class="align-items-center">
                                                            <input type="checkbox" data-toggle="toggle" data-onstyle="<%=config.view['Color of switch checked']%>" data-offstyle="<%=config.view['Color of switch unchecked']%>" data-size="lg"
                                                            data-on="<%= __('On') %>" data-off="<%= __('Off') %>" id="toggle-event" onchange="showChkState()">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                <%}else if(config.type == 'Toggle button'){%>
                                    <!-- <div class="col-xl-2 col-md-6 mb-4 dashboard-card">
                                        <div class="card shadow h-100 py-0">
                                            <div class="card-body">
                                                <div class="row no-gutters">
                                                    <div class="col mr-2 align-items-center">
                                                        <div class="text-xs font-weight-bold text-primary text-uppercase text-center">
                                                            <%=boardWidget[j].w_display_name%>
                                                        </div>
                                                        
                                                        <div class="text-center">
                                                            <label for="button_toggle" class="text font-weight-bold text-uppercase text-center"
                                                            id="buttonstate-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].sensor_config[0].status_key%>-<%=boardWidget[j].w_id%>">
                                                                <%= __('State')%>: ___</label>
                                                        </div>
                                                        <div id="buttontime-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].sensor_config[0].status_key%>-<%=boardWidget[j].w_id%>" 
                                                            class="text-xs text-muted text-center"
                                                            style="visibility: hidden;"><span>0</span><span>s</span>
                                                        </div>
                                                        -->
                                                        
                                                        <!-- <%let sensor_config = JSON.stringify(boardWidget[j].sensor_config);%> -->
                                                        <!-- <div class="text-center">
                                                            <button class="btn btn-lg btn-<%=config.view['Color of button state 1']%> shadow-sm controller"
                                                                id="button-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].sensor_config[0].status_key%>-<%=boardWidget[j].w_id%>"
                                                                role="button" aria-describedby="button_toggle" name="button_toggle" onclick="toggleButtonManager('<%=boardWidget[j].e_dev_id[0]%>',
                                                                                                                                                            '<%=JSON.stringify(boardWidget[j].sensor_config)%>',
                                                                                                                                                            '<%=boardWidget[j].w_id%>')">
                                                                <span class="text"><%= __('Switch') %></span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div> -->
                                    <div class="col-xl-3 col-md-6 mb-4 dashboard-card">
                                        <div class="card border-left-<%=config.view['Color of button state 1']%> shadow">
                                            <div class="card-body d-flex align-item-center">
                                                <div class="d-flex flex-row no-gutters align-items-center justify-content-between">
                                                    <div class="col-auto mr-4">
                                                        <div class="text-med font-weight-bold text-primary text-uppercase mb-1">
                                                            <%=boardWidget[j].w_display_name%></div>
    
                                                        <div class="h5 mb-0 font-weight-bold text-med text-gray-800" id="buttonstate-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].sensor_config[0].status_key%>-<%=boardWidget[j].w_id%>"><%= __('State')%>: ___</div>
                                                        <div class="p mb-0 text-xs text-black-50" id="buttontime-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].sensor_config[0].status_key%>-<%=boardWidget[j].w_id%>">UPDATED</div>
                                                    </div>
                                                    <div class="col-auto">
                                                        <div class="text-center">
                                                            <button class="btn btn-lg btn-<%=config.view['Color of button state 1']%> shadow-sm controller"
                                                                id="button-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].sensor_config[0].status_key%>-<%=boardWidget[j].w_id%>"
                                                                role="button" aria-describedby="button_toggle" name="button_toggle" onclick="toggleButtonManager('<%=boardWidget[j].e_dev_id[0]%>',
                                                                                                                                                            '<%=JSON.stringify(boardWidget[j].sensor_config)%>',
                                                                                                                                                            '<%=boardWidget[j].w_id%>')">
                                                                <span class="text-med"><%= __('Toggle') %></span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                    <div class="col-auto ml-4">
                                                        <div class="dropdown no-arrow">
                                                            <a class="dropdown-toggle" href="#" role="button" id="<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-<%=boardWidget[j].w_id%>-configure"
                                                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                                            </a>
                                                            <!-- Configure dropdown menu -->
                                                            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                            aria-labelledby="<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-configure">
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editWidgetModal"
                                                                onclick="openEditWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Configure widget') %></a>
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deleteWidgetModal"
                                                                onclick="openDeleteWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Delete widget') %></a>
                                                                <script>
                                                                    function openEditWidgetModal(widget_id) {
                                                                        var str = "Widget ID: " + widget_id;
                                                                        $("#widget_id").html(str);
                                                                        document.getElementById(`edit-widget_id`).value = widget_id;
                                                                    }
                                                                    function openDeleteWidgetModal(widget_id) {
                                                                        document.getElementById(`delete-widget_id`).value = widget_id;
                                                                    }
                                                                </script>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <%}else if(config.type == '3-way toggle button'){%> 
                                    <div class="col-xl-3 col-md-6 mb-4 dashboard-card">
                                        <div class="card border-left-<%=config.view['Color of button state 1']%> shadow">
                                            <div class="card-body d-flex align-item-center">
                                                <div class="d-flex flex-row no-gutters align-items-center justify-content-between">
                                                    <div class="col-auto mr-4">
                                                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                                            <%=boardWidget[j].w_display_name%></div>
    
                                                        <div style="display: none;" class="h5 mb-0 font-weight-bold text-gray-800" id="triplewaybuttonstate-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].sensor_config[0].status_key[0]%>-<%=boardWidget[j].w_id%>"></div>
                                                        <div style="display: none;" class="h5 mb-0 font-weight-bold text-gray-800" id="triplewaybuttonstate-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].sensor_config[0].status_key[1]%>-<%=boardWidget[j].w_id%>"></div>
                                                        <div class="p mb-0 text-xs text-black-50" id="buttontime-payload-data-<%=boardWidget[j].w_id%>">UPDATED</div>
                                                    </div>
                                                    <div class="d-flex flex-row align-items-center col-auto">
                                                        <div class="text-center">
                                                            <button class="btn btn-lg btn-<%=config.view['Color of button state 1']%> shadow-sm controller"
                                                                id="button-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>"
                                                                role="button" aria-describedby="button_toggle" name="button_toggle" onclick="tripleWayToggleButtonManager('<%=boardWidget[j].e_dev_id[0]%>',
                                                                                                                                                            '<%=JSON.stringify(boardWidget[j].sensor_config)%>',
                                                                                                                                                            '<%=boardWidget[j].w_id%>')">
                                                                <span class="text"><%= __('Toggle') %></span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                    <div class="col-auto ml-4">
                                                        <div class="dropdown no-arrow">
                                                            <a class="dropdown-toggle" href="#" role="button" id="<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-<%=boardWidget[j].w_id%>-configure"
                                                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                                            </a>
                                                            <!-- Configure dropdown menu -->
                                                            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                            aria-labelledby="<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-configure">
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editWidgetModal"
                                                                onclick="openEditWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Configure widget') %></a>
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deleteWidgetModal"
                                                                onclick="openDeleteWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Delete widget') %></a>
                                                                <script>
                                                                    function openEditWidgetModal(widget_id) {
                                                                        var str = "Widget ID: " + widget_id;
                                                                        $("#widget_id").html(str);
                                                                        document.getElementById(`edit-widget_id`).value = widget_id;
                                                                    }
                                                                    function openDeleteWidgetModal(widget_id) {
                                                                        document.getElementById(`delete-widget_id`).value = widget_id;
                                                                    }
                                                                </script>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <%}else if(config.type == '3-way toggle switch'){%> 
                                    <div class="col-xl-3 col-md-6 mb-4 dashboard-card">
                                        <div class="card border-left-<%=config.view['Color of button state 1']%> shadow">
                                            <div class="card-body d-flex align-item-center">
                                                <div class="d-flex flex-row no-gutters align-items-center justify-content-between">
                                                    <div class="col-auto mr-4">
                                                        <div class="text-med font-weight-bold text-primary text-uppercase mb-1">
                                                            <%=boardWidget[j].w_display_name%></div>
                                                            <!-- style="display: none;" -->
                                                        <div style="display: none;" class="h5 mb-0 font-weight-bold text-gray-800" id="triplewaybuttonstate-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].sensor_config[0].status_key[0]%>-<%=boardWidget[j].w_id%>"></div>
                                                        <div style="display: none;" class="h5 mb-0 font-weight-bold text-gray-800" id="triplewaybuttonstate-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].sensor_config[0].status_key[1]%>-<%=boardWidget[j].w_id%>"></div>
                                                        <div class="p mb-0 text-xs text-black-50" id="buttontime-payload-data-<%=boardWidget[j].w_id%>">UPDATED</div>
                                                    </div>
                                                    <div class="d-flex flex-row align-items-center col-auto">
                                                        
                                                            <!-- <button class="btn btn-lg btn-<%=config.view['Color of button state 1']%> shadow-sm controller"
                                                                id="button-payload-data-<%=boardWidget[j].w_id%>"
                                                                role="button" aria-describedby="button_toggle" name="button_toggle" onclick="tripleWayToggleButtonManager('<%=boardWidget[j].e_dev_id[0]%>',
                                                                                                                                                            '<%=JSON.stringify(boardWidget[j].sensor_config)%>',
                                                                                                                                                            '<%=boardWidget[j].w_id%>')">
                                                                <span class="text"><%= __('Toggle') %></span>
                                                            </button> -->
                                                            <span class="p text-xs mr-2"
                                                            id="triplewaybuttonstate-payload-data-state0-<%=boardWidget[j].w_id%>"><%=boardWidget[j].sensor_config[0].status_val[0].state%></span>
                                                            <label class="switch mb-0">
                                                                <input id="button-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>" type="checkbox" onclick="tripleWayToggleButtonManager('<%=boardWidget[j].e_dev_id[0]%>',
                                                                '<%=JSON.stringify(boardWidget[j].sensor_config)%>',
                                                                '<%=boardWidget[j].w_id%>')" checked>
                                                                <span class="slider round" id="slider-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>"></span>
                                                            </label>
                                                            <span class="p text-xs ml-2" id="triplewaybuttonstate-payload-data-state1-<%=boardWidget[j].w_id%>"><%=boardWidget[j].sensor_config[0].status_val[1].state%></span>
                                                        
                                                    </div>
                                                    <div class="col-auto ml-4">
                                                        <div class="dropdown no-arrow">
                                                            <a class="dropdown-toggle" href="#" role="button" id="<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-<%=boardWidget[j].w_id%>-configure"
                                                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                                            </a>
                                                            
                                                            <!-- Configure dropdown menu -->
                                                            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                            aria-labelledby="<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].s_sensor_key[0]%>-configure">
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editWidgetModal"
                                                                onclick="openEditWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Configure widget') %></a>
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deleteWidgetModal"
                                                                onclick="openDeleteWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Delete widget') %></a>
                                                                <script defer>
                                                                    $(`#button-payload-data-<%=boardWidget[j].w_id%>`).data('id', 
                                                                        JSON.parse(`<%=JSON.stringify(boardWidget[j].sensor_config) %>`.replace(/&#34;/g, '"'))
                                                                    );
                                                                    console.log(`#button-payload-data-<%=boardWidget[j].w_id%>`);
                                                                    console.log( $(`#button-payload-data-<%=boardWidget[j].w_id%>`).data('id'));
                                                                    function openEditWidgetModal(widget_id) {
                                                                        var str = "Widget ID: " + widget_id;
                                                                        $("#widget_id").html(str);
                                                                        document.getElementById(`edit-widget_id`).value = widget_id;
                                                                    }
                                                                    function openDeleteWidgetModal(widget_id) {
                                                                        document.getElementById(`delete-widget_id`).value = widget_id;
                                                                    }
                                                                </script>
                                                                
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <%}else if(config.type == 'metric-testing-downlink'){%> 
                                        <div class="col-xl-4 col-md-6 mb-4">
                                            <!-- Metrics Testing Table -->
                                            <div class="card shadow" style="height: 100%">
                                                <!-- Card Header - Dropdown -->
                                                <div
                                                    class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                                    <h6 class="m-0 font-weight-bold text-primary"><%=boardWidget[j].w_display_name%></h6>
                                                    <div class="dropdown no-arrow">
                                                        <a class="dropdown-toggle" role="button" id="dropdownMenuLink"
                                                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                                        </a>
                                                        <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                            aria-labelledby="dropdownMenuLink">
                                                            <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editWidgetModal"
                                                                        onclick="openEditWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Configure widget') %></a>
                        
                                                            <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deleteWidgetModal"
                                                                        onclick="openDeleteWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Delete widget') %></a>
                                                            <script>
                                                                function openEditWidgetModal(widget_id) {
                                                                    var str = "Widget ID: " + widget_id;
                                                                    $("#widget_id").html(str);
                                                                    document.getElementById(`edit-widget_id`).value = widget_id;
                                                                }
                                                                function openDeleteWidgetModal(widget_id) {
                                                                    document.getElementById(`delete-widget_id`).value = widget_id;
                                                                }
                                                            </script>
                                                        </div>
                                                    </div>
                                                </div>
                                                <!-- Card Body -->
                                                <div class="card-body row align-items-center small font-weight-bold ">
                                                    <div id="btnmetricdownlinktime-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>" class="col-6 text-primary">UPDATED</div>
                                                    <div class="col-6 d-flex flex-wrap" style="gap: 5px;">
                                                        <button  id="btnmetricdownlink-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>"
                                                            class="btn-payload-data- btn btn-sm btn-primary shadow-sm controller" role="button"
                                                            onclick="metricTestingDownlinkManager('<%=boardWidget[j].e_dev_id[0]%>',
                                                            '<%=JSON.stringify(boardWidget[j].sensor_config)%>',
                                                            '<%=boardWidget[j].w_id%>')">
                                                            <span id="btnmetricdownlinklabel-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>"><%= __('Start') %></span>
                                                        </button>
                                                        <button  id="btnmetricdownlinkconfig-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>"
                                                            class="btn btn-sm btn-dark shadow-sm controller" role="button"
                                                            onclick="">
                                                            <span><%= __('Configure') %></span>
                                                        </button>
                                                    </div>
                                                    <hr class="col-11 sidebar-divider">
                                                    <div class="col-3">PLR</div>
                                                    <div class="col-3"><span class="mr-1" id="btnmetricdownlinkplr-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>">0</span><span>%</span></div>
                                                    <div class="col-3">Avg. RTT</div>
                                                    <div class="col-3"><span class="mr-1" id="btnmetricdownlinkrtt-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>">0</span><span>s</span></div>
                                                    <div class="col-3">PKG Sent</div>
                                                    <div class="col-3"><span class="mr-1" id="btnmetricdownlinkpck-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>">0</span><span>pkts</span></div>
                                                    <div class="col-3">RESP</div>
                                                    <div class="col-3"><span class="mr-1" id="btnmetricdownlinkresp-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>">0</span><span></span></div>
                                                    <div class="col-3">Avg. RSSI</div>
                                                    <div class="col-3"><span class="mr-1" id="btnmetricdownlinkrssi-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>">0</span><span>dBm</span></div>
                                                </div>
                                            </div>
                                        </div>
                                    <%}else if(config.type == 'metric-testing-uplink'){%> 
                                        <div class="col-xl-4 col-md-6 mb-4">
                                            <!-- Metrics Testing Table -->
                                            <div class="card shadow" style="height: 100%">
                                                <!-- Card Header - Dropdown -->
                                                <div
                                                    class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                                    <h6 class="m-0 font-weight-bold text-primary"><%=boardWidget[j].w_display_name%></h6>
                                                    <div class="dropdown no-arrow">
                                                        <a class="dropdown-toggle" role="button" id="dropdownMenuLink"
                                                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                                        </a>
                                                        <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                                            aria-labelledby="dropdownMenuLink">
                                                            <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editWidgetModal"
                                                                        onclick="openEditWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Configure widget') %></a>
                        
                                                            <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deleteWidgetModal"
                                                                        onclick="openDeleteWidgetModal('<%=boardWidget[j].w_id%>')"><%= __('Delete widget') %></a>
                                                            <script>
                                                                function openEditWidgetModal(widget_id) {
                                                                    var str = "Widget ID: " + widget_id;
                                                                    $("#widget_id").html(str);
                                                                    document.getElementById(`edit-widget_id`).value = widget_id;
                                                                }
                                                                function openDeleteWidgetModal(widget_id) {
                                                                    document.getElementById(`delete-widget_id`).value = widget_id;
                                                                }
                                                            </script>
                                                        </div>
                                                    </div>
                                                </div>
                                                <!-- Card Body -->
                                                <div class="card-body row align-items-center small font-weight-bold ">
                                                    <div id="btnmetricuplinkstate-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>" class="col-6 text-primary">Stopped</div>
                                                    <div class="col-6 d-flex flex-wrap" style="gap: 5px;">
                                                        <button  id="btnmetricuplink-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>"
                                                            class="btn-payload-data- btn btn-sm btn-primary shadow-sm controller" role="button"
                                                            onclick="metricTestingUplinkManager('<%=boardWidget[j].e_dev_id[0]%>',
                                                            '<%=JSON.stringify(boardWidget[j].sensor_config)%>',
                                                            '<%=boardWidget[j].w_id%>')">
                                                            <span id="btnmetricuplinklabel-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>"><%= __('Start') %></span>
                                                        </button>
                                                        <button  id="btnmetricuplinkconfig-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>"
                                                            class="btn btn-sm btn-dark shadow-sm controller" role="button"
                                                            onclick="">
                                                            <span><%= __('Configure') %></span>
                                                        </button>
                                                    </div>
                                                    <hr class="col-11 sidebar-divider">
                                                    <div class="col-3">PLR</div>
                                                    <div class="col-3"><span class="mr-1" id="btnmetricuplinkplr-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>">0</span><span>%</span></div>
                                                    <!-- <div class="col-3">Avg. RTT</div>
                                                    <div class="col-3"><span class="mx-2" id="btnmetricuplinkrtt-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>">___</span><span>unit</span></div> -->
                                                    <div class="col-3">PKG Recv</div>
                                                    <div class="col-3"><span class="mr-1"  id="btnmetricuplinkpck-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>">0</span><span>pkts</span></div>
                                                    <!-- <div class="col-3">Avg. RESP</div>
                                                    <div class="col-3"><span class="mx-2" id="btnmetricuplinkresp-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>">___</span><span>unit</span></div> -->
                                                    <div class="col-3">Avg. RSSI</div>
                                                    <div class="col-3"><span class="mr-1" id="btnmetricuplinkrssi-payload-data-<%=boardWidget[j].e_dev_id[0]%>-<%=boardWidget[j].w_id%>">0</span><span>dBm</span></div>
                                                </div>
                                            </div>
                                        </div>
                                    <%}%>
                                
                            <%}%>
                        <%}%>
                        <%} catch (error) {}%>
                        
                    </div>
                    
                    <%}%>
                    <%} catch (error) {}%>
                    <!-- <div class="card shadow col-md-12 mb-4">
                        
                        <div
                            class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                            <h6 class="m-0 font-weight-bold text-primary">xzccz</h6>
                            <div class="dropdown no-arrow">
                                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                </a>
                                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                    aria-labelledby="dropdownMenuLink">
                                    <div class="dropdown-header">Dropdown Header:</div>
                                    <a class="dropdown-item" href="#">Action</a>
                                    <a class="dropdown-item" href="#">Another action</a>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item" href="#">Something else here</a>
                                </div>
                            </div>
                        </div>
                        
                        <div class="card-body">
                            <div class="chart-area">
                                <canvas id="myAreaChart"></canvas>
                                
                            </div>
                        </div>
                        
                    </div> -->
               
                </div>
                <!-- /.container-fluid -->

            </div>
            <!-- End of Main Content -->

            <!-- Footer -->
            <%- include ('../partials/footer.ejs') %>
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Global Modals-->
    <!-- Configure Widget Modals for unique Widgets -->
    <div class="modal fade" id="editWidgetModal" tabindex="-1"
        role="dialog" aria-labelledby="configureSensorModalLabel" aria-hidden="true">

        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal header -->
                <div class="modal-header">
                    <h5 class="modal-title" id="configureSensorModalLabel"><%= __('Configure widget') %></h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="modal-body">
                    <p id="widget_id" class="font-weight-bold">Widget ID: temp</p>
                    <hr>
                    <!-- action="widget/configure" -->
                    <form method="post" action="" class="user">
                        <!-- <input type="text" class="form-control form-control-user" id='edit-widget_id' value=""> -->
                        <!-- Input type Text -->
                        <label for="widget_name"><%= __('Widget name') %></label>
                        <div class="form-group">
                            <input type="text" class="form-control form-control-user" id="configureWidgetName"
                                aria-describedby="widget_name" placeholder="Enter Widget name" name="widget_name">
                        </div>
                        <!-- Input type Select -->
                        <label for="configureSensorData"><%= __('Display data') %></label>
                        <select class="form-control mb-4" id="configureSensorData">
                            <option selected value="1">Temperature</option>
                            <option value="2">Hudmidity</option>
                            <option value="3">Bat5V</option>
                        </select>
                        <input type="submit" id="widget_confirm" value="Confirm changes" class="btn btn-primary btn-user btn-block">
                        <hr>
                    </form>
                </div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    <button class="btn btn-outline-dark" type="button" data-dismiss="modal"><%= __('Cancel') %></button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Widget Modals for unique Widgets -->
    <div class="modal fade" id="deleteWidgetModal" tabindex="-1"
        role="dialog" aria-labelledby="deleteWidgetModalLabel" aria-hidden="true">

        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal header -->
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteWidgetModalLabel"><%= __('Delete this widget?') %></h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="modal-body">Select <b style="color: #2F69CA">Delete</b> button to remove this widget from the board.
                </div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    <!-- <button class="btn btn-secondary" type="button" data-dismiss="modal"><%= __('Delete') %></button> -->
                    <!-- action="widget/delete" -->
                    <form method="post" action="dashboard/delete-widget" class="user">
                        
                        <input type="hidden" class="form-control form-control-user" name="widget_id" id='delete-widget_id' value="">
                        <button class="btn btn-primary" type="submit"><%= __('Delete') %></button>
                    </form>  
                    <button class="btn btn-outline-dark" type="button" data-dismiss="modal"><%= __('Cancel') %></button>  
                                        
                                    
                        
                    
                </div>
            </div>
        </div>
    </div>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal header -->
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel"><%= __('Ready to leave?') %></h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="modal-body"><%= __('Select Logout below if you are ready to end your current session') %>.</div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    
                    <button class="btn btn-outline-dark" type="button" data-dismiss="modal"><%= __('Cancel') %></button>
                    
                    <form action="../login/logout" method="post">
                        <!-- <a  onclick="this.parentNode.submit();">Logout</a> -->
                        
                        <input type="submit" class="btn btn-primary" onclick='clientStorage.removeItem(STORAGE_KEY);' value="<%= __('Logout') %>">
                    </form>
                </div>
                
            </div>
        </div>
    </div> 
    
    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>
    
    <!-- Global level plugins --> 
    <%- include('../partials/script.ejs') %>
    
    <!-- Page level plugins -->
    <script src="vendor/chart.js/Chart.min.js"></script>
    
    <!-- Page level custom scripts -->
    <script src="js/visuals/chart-area-demo.js"></script>
    <!-- <script src="js/visuals/chart-pie-demo.js"></script> -->
    
    <script defer>
            document.querySelectorAll('[id^="chart payload-data"]').forEach((item)=>{
                var data = $(item).attr('id').split(' ');
                data.shift();
                data.shift();
                data.pop();
                
                let properties = {
                    type: 'line',
                    data: {
                        labels: [],
                        datasets: [],
                    },
                    options: {
                        spanGaps: true,
                        maintainAspectRatio: false,
                        layout: {
                            padding: {
                                left: 10,
                                right: 25,
                                top: 25,
                                bottom: 0
                            }
                        },
                        scales: {
                            xAxes: [{
                                time: {
                                unit: 'date'
                                },
                                gridLines: {
                                display: false,
                                drawBorder: false
                                },
                                ticks: {
                                maxTicksLimit: 7
                                }
                            }],
                            yAxes: [{
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Temperature (°C)'
                                },
                                ticks: {
                                    maxTicksLimit: 5,
                                    padding: 10,
                                    // Include a dollar sign in the ticks
                                    callback: function(value, index, values) {
                                        return number_format(value, 2);
                                    }
                                },
                                gridLines: {
                                    color: "rgb(234, 236, 244)",
                                    zeroLineColor: "rgb(234, 236, 244)",
                                    drawBorder: true,
                                    borderDash: [2],
                                    zeroLineBorderDash: [2]
                                }
                            }],
                        },
                        legend: {
                        display: true
                        },
                        tooltips: {
                            backgroundColor: "rgb(255,255,255)",
                            bodyFontColor: "#858796",
                            titleMarginBottom: 10,
                            titleFontColor: '#6e707e',
                            titleFontSize: 14,
                            borderColor: '#dddfeb',
                            borderWidth: 1,
                            xPadding: 15,
                            yPadding: 15,
                            displayColors: false,
                            intersect: false,
                            mode: 'index',
                            caretPadding: 10,
                            callbacks: {
                                label: function(tooltipItem, chart) {
                                var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                return datasetLabel + ': ' + number_format(tooltipItem.yLabel, 2);
                                }
                            }
                        }
                    }
                }
                let deviceSensor = {
                    dev: [],
                    sensor: []
                };
                let color = [{backgroundColor: 'rgba(78, 115, 223, 0.05)', borderColor: 'rgba(78, 115, 223, 1)'},
                {backgroundColor: 'rgba(222, 85, 78, 0.05)', borderColor: 'rgba(222, 85, 78, 1)'},
                {backgroundColor: 'rgba(78, 222, 122, 0.05)', borderColor: 'rgba(78, 222, 122, 1)'}]
                for(let i=0; i < data.length; i+=2){
                    deviceSensor.dev.push(data[i]);
                    deviceSensor.sensor.push(data[i+1]);
                    properties.data.datasets.push({
                        id: {
                            dev: data[i],
                            sensor: data[i+1]
                        },
                        label: `${data[i+1]} (${data[i]})`,
                        lineTension: 0.3,
                        backgroundColor: color[i/2].backgroundColor,
                        borderColor: color[i/2].borderColor,
                        pointRadius: 3,
                        pointBackgroundColor: color[i/2].borderColor,
                        pointBorderColor: color[i/2].borderColor,
                        pointHoverRadius: 3,
                        pointHoverBackgroundColor: color[i/2].borderColor,
                        pointHoverBorderColor: color[i/2].borderColor,
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                        data: [],
                    });
                    properties.options.scales.yAxes[0].scaleLabel.labelString = '';
                }
                var graph = new Chart(item, properties);
                $(item).data('graph', graph); 
                $(item).data('id', deviceSensor); 
                                            
            }); 
    </script>

<script defer>
    const streaming_broker_protocol = "ws"; //pass from server
    const streaming_broker_addr = '<%= broker.addr %>'; //pass from server
    const streaming_broker_port = '<%= broker.port %>'; //pass from server
    const STORAGE_KEY = 'payload-storage';
    const MAX_SESSION_STORAGE_LENGTH = 20;
    const devices = JSON.parse(`<%= dev_list %>`.replace(/&#34;/g, '"'));
    const device_type = JSON.parse(`<%= dev_type_id %>`.replace(/&#34;/g, '"'));
    const streaming_broker_options = {
        clientId: '<%= client_id %>',
        username: '<%= broker.id %>',
        password: '<%= broker.psw %>',
        keepalive: 120,
        protocolVersion: 5,
        clean: false,
        properties: {  // MQTT 5.0
            sessionExpiryInterval: 60
        }
        // resubscribe: false
    }
    const sub_topics = [];
    devices.forEach((device_id) => {
        sub_topics.push(
            {
                'topic': `devices/${device_id}/up/payload`,
                'options': {
                    'qos': 0
                }
            },
            {
                'topic': `devices/${device_id}/join`,
                'options': {
                    'qos': 0
                }
            },
            {
                'topic': `devices/${device_id}/down/ack`,
                'options': {
                    'qos': 0
                }
            },
            {
                'topic': `devices/${device_id}/down/nack`,
                'options': {
                    'qos': 0
                }
            },
            {
                'topic': `devices/${device_id}/down/queued`,
                'options': {
                    'qos': 0
                }
            },
            {
                'topic': `devices/${device_id}/down/sent`,
                'options': {
                    'qos': 0
                }
            },
            {
                'topic': `devices/${device_id}/down/failed`,
                'options': {
                    'qos': 0
                }
            },
            {
                'topic': `devices/${device_id}/service/data`,
                'options': {
                    'qos': 0
                }
            },
            {
                'topic': `devices/${device_id}/location/solved`,
                'options': {
                    'qos': 0
                }
            },
        );
    });
        
    const streaming_broker_mqttclient = mqtt.connect(
        `${streaming_broker_protocol}://${streaming_broker_addr}:${streaming_broker_port}/mqtt`, 
        streaming_broker_options
    );
    
    streaming_broker_mqttclient.on('connect', streaming_broker_connect_handler);
    streaming_broker_mqttclient.on('error', streaming_broker_error_handler);
    streaming_broker_mqttclient.on('message', streaming_broker_message_handler);
    
    
    
    //create browser storage instance
    const clientStorage = localStorage;
    //handle incoming connect
    function streaming_broker_connect_handler(connack)
    {
        try {
            console.log(`streaming broker connected? ${streaming_broker_mqttclient.connected}`);
            if(connack.sessionPresent==false){
                
                clientStorage.removeItem(STORAGE_KEY);
                sub_topics.forEach((topic) => {
                    streaming_broker_mqttclient.subscribe(topic['topic'], topic['options']);
                });
            }else{
                let storage = clientStorage.getItem(STORAGE_KEY);
                let length_flag = 0;
                if(storage){
                    storage = JSON.parse(storage);
                }else{
                    return;
                }
                for(let i in storage.payload){
                    
                    for(let j in storage.payload[i].payload_data){
                        // TOGGLE BUTTON
                        document.querySelectorAll(`[id^=buttonstate-payload-data-${i}-${j}]`).forEach((item)=>{                               
                            item.innerHTML = `<%= __('State') %>: ${storage.payload[i].payload_data[j].at(-1)}`;
                        });
                        document.querySelectorAll(`[id^=triplewaybuttonstate-payload-data-${i}-${j}]`).forEach((item)=>{                               
                            item.innerHTML = `${storage.payload[i].payload_data[j].at(-1)}`;
                            
                            var path = item.id.split('-').pop();
                            let sensor_config = $(`#button-payload-data-${path}`).data('id');
                            
                            
                            //FIND CURRENT STATE
                            if(sensor_config) {
                                
                                if(j!=sensor_config[0].status_key.at(-1)) return
                                let status = []
                                
                                sensor_config[0].status_key.forEach(element => {
                                    status.push(document.getElementById(`triplewaybuttonstate-payload-data-${i}-${element}-${path}`).innerHTML)
                                    // status.push();
                                });
                                // delete sensor_config.cmd[];
                                let downlink_cmd=sensor_config[0].cmd[sensor_config[0].status_val[0].state];
                                sensor_config[0].status_val.forEach((element, index) => {
                                    //Find current state
                                    
                                    if(JSON.stringify(element.val)===JSON.stringify(status)) {
                                        
                                        if(index==0) document.getElementById(`button-payload-data-${path}`).checked= false;
                                        else document.getElementById(`button-payload-data-${path}`).checked= true;
                                        
                                    }
                                    
                                });
                                
                            }
                        });
                        // GRAPH
                        document.querySelectorAll(`[id^=timestamp-payload-data-${i}-${j}]`).forEach((item)=>{
                            item.innerHTML = `<%= __('Last updated') %>: ${storage.payload[i].recv_timestamp.at(-1)}`;                                 
                        });
                        document.querySelectorAll(`[id^=payload-data-${i}-${j}]`).forEach((item)=>{
                            item.innerHTML = storage.payload[i].payload_data[j].at(-1);                                  
                        });
                        document.querySelectorAll(`[id^="chart payload-data"]`).forEach((item)=>{        
                            let id = $(item).data('id');
                            try {
                                for(let k in id.dev){
                                    if(id.dev[k]==i && id.sensor[k]==j){
                                        var graph = $(item).data('graph');
                                        let labels = graph.data.labels.concat(storage.payload[i].recv_timestamp);
                                        graph.data.labels=[...new Set(labels)];
                                        graph.data.labels.sort();
                                        // graph.data.datasets[0].data=storage.payload[i].payload_data[j];
                                        graph.data.datasets.forEach((item) => {
                                            if(item.id.dev == i && item.id.sensor == j){
                                                item.data = storage.payload[i].recv_timestamp.map((element,index)=>{
                                                    return {
                                                        x: element,
                                                        y: storage.payload[i].payload_data[j][index]
                                                    }
                                                });
                                    
                                            }
                                            else {
                                            //     item.data = NaN;
                                            }
                                        })
                                        graph.update(); 
                                    }
                                }
                            } catch (err) {
                                console.log(err);
                            }
                        });
                    }
                }
            }
        }
        catch(err) {
            console.log(err);
        }
        
    }
    
    
    //MESSAGE SEND HERE
    function streaming_broker_message_handler(topic, message, packet)
    {
        try {
            var recv_topic = topic.split('/');
            var dev_id = recv_topic[1];
            console.log(topic);
            if (topic == `devices/${dev_id}/up/payload`) {
                //parse msg
                let parsed_message = JSON.parse(message);
                //CONTINUE
                console.log('parsed_message', parsed_message);
        
                let storage = clientStorage.getItem(STORAGE_KEY);
                let length_flag = 0;
                if(storage){
                    storage = JSON.parse(storage);
                }else{
                    storage = {
                        payload: {}
                    }
                }
                if(!storage.payload[dev_id]){
                    storage.payload[dev_id] = {};
                    storage.payload[dev_id].recv_timestamp = [];
                    storage.payload[dev_id].payload_data = {};
                    length_flag = 1;
                }else if(storage.payload[dev_id].recv_timestamp.length > MAX_SESSION_STORAGE_LENGTH){
                    storage.payload[dev_id].recv_timestamp.shift();
                    length_flag = 2;
                }
                parsed_message.recv_timestamp = timestamp_format(parsed_message.recv_timestamp);
                storage.payload[dev_id].recv_timestamp.push(parsed_message.recv_timestamp);
                for(var i in parsed_message.payload_data){
                    //STORAGE
                    if(length_flag==1){
                        storage.payload[dev_id].payload_data[i] = [];
                    }else if(length_flag==2){
                        storage.payload[dev_id].payload_data[i].shift();
                    }
                    storage.payload[dev_id].payload_data[i].push(parsed_message.payload_data[i]);
                    //TOGGLE BUTTON
                    document.querySelectorAll(`[id^=buttonstate-payload-data-${dev_id}-${i}]`).forEach((item)=>{
                        try {
                            if(item.innerHTML != `<%= __('State') %>: ${parsed_message.payload_data[i]}`){
                                var data = $(`#${item.id}`).data('id');
                                if(data) {
                                    clearInterval(data.interval);
                                }
                                document.getElementById(`buttontime-payload-data-${item.id.substring(25)}`).innerHTML = 'UPDATED';
                                document.getElementById(`button-payload-data-${item.id.substring(25)}`)["disabled"] = false;
                                document.getElementById(`button-payload-data-${item.id.substring(25)}`).style.pointerEvents="auto";
                                
                                item.innerHTML = `<%= __('State') %>: ${parsed_message.payload_data[i]}`;
                            }
                                
                        }
                        catch (err) {
                        }
                                                        
                        
                    });
                    
                    document.querySelectorAll(`[id^=triplewaybuttonstate-payload-data-${dev_id}-${i}]`).forEach((item)=>{
                        try {
                                var data = $(`#${item.id}`).data('id');
                                var path = item.id.split('-').pop();
                                
                                if(data) {
    
                                    
                                    clearInterval(data.interval);
                                    
                                    document.getElementById(`buttontime-payload-data-${path}`).innerHTML = 'UPDATED';
                                    document.getElementById(`button-payload-data-${path}`)["disabled"] = false;
                                    document.getElementById(`button-payload-data-${path}`).style.pointerEvents="auto";
                                    document.getElementById(`slider-payload-data-${path}`).style["background-color"]="#2196F3";
                                }
                                item.innerHTML = `${parsed_message.payload_data[i]}`;
                                let sensor_config = $(`#button-payload-data-${path}`).data('id');
                                    
                                //FIND CURRENT STATE
                                if(sensor_config) {
                                    if(i != sensor_config[0].status_key.at(-1)) return;
                                    let status = []
                                    
                                    sensor_config[0].status_key.forEach(element => {
                                        
                                        status.push(document.getElementById(`triplewaybuttonstate-payload-data-${dev_id}-${element}-${path}`).innerHTML);
                                    });
                                    // delete sensor_config.cmd[];
                                    let downlink_cmd=sensor_config[0].cmd[sensor_config[0].status_val[0].state];
                                    sensor_config[0].status_val.forEach((element, index) => {
                                        //Find current state
                                        
                                        if(JSON.stringify(element.val)===JSON.stringify(status)) {
                                            
                                            if(index==0) document.getElementById(`button-payload-data-${path}`).checked= false;
                                            else document.getElementById(`button-payload-data-${path}`).checked= true;
                                            
                                        }
                                        
                                    });
                                    
                                }
                                
                                
                                // console.log(path);
                                
                                
                        }
                        catch (err) {
                            console.log(err)
                        }
                                                        
                        
                    });
                    document.querySelectorAll(`[id^=btn-payload-data-${dev_id}]`).forEach((item)=>{
                        try {
                                var data = $(`#${item.id}`).data('id');
                                var path = item.id.split('-').pop();
                                
                                if(data) {
    
                                    
                                    clearInterval(data.interval);
                                    
                                    document.getElementById(`buttontime-payload-data-${path}`).innerHTML = 'UPDATED';
                                    item["disabled"] = false;
                                }
                                // item.innerHTML = `${parsed_message.payload_data[i]}`;
                                // let sensor_config = $(`#button-payload-data-${path}`).data('id');
                                    
                
                                
                                
                                // console.log(path);
                                
                                
                        }
                        catch (err) {
                            console.log(err)
                        }
                                                        
                        
                    });

                    
                    //GRAPH
                    document.querySelectorAll(`[id^=timestamp-payload-data-${dev_id}-${i}]`).forEach((item)=>{
                                                        item.innerHTML = `<%= __('Last updated') %>: ${parsed_message.recv_timestamp}`;                                  
                    });
                    
                    document.querySelectorAll(`[id^=payload-data-${dev_id}-${i}]`).forEach((item)=>{
                                                        item.innerHTML = parsed_message.payload_data[i];                                  
                    });
                    document.querySelectorAll('[id^="chart payload-data"]').forEach((item)=>{
                                
                        let id = $(item).data('id');
                        try {
                            for(let j in id.dev){
                                if(id.dev[j]==dev_id && id.sensor[j]==i){
                                    var graph = $(item).data('graph');
                                    graph.data.labels.push(parsed_message.recv_timestamp);
                                    graph.data.labels=[...new Set(graph.data.labels)];
                                    graph.data.labels.sort();
                                    // console.log(graph.data.labels);
                                    // graph.data.datasets[0].data.push(parsed_message.payload_data[i]);
                                    graph.data.datasets.forEach((item_data) => {
                                        // console.log('plot1', item_data.id.dev, item_data.id.sensor);
                                        if(item_data.id.dev == dev_id && item_data.id.sensor == i){
                                            // console.log('plot', dev_id, i, parsed_message.recv_timestamp, parseFloat(parsed_message.payload_data[i]));
                                            item_data.data.push({
                                                x: parsed_message.recv_timestamp,
                                                y: parseFloat(parsed_message.payload_data[i]) 
                                            });
                                        }
                                    })
                                    graph.update(); 
                                }
                            }
                        } catch (err) {
                            console.log(err);
                        }           
                    });
                }
                document.querySelectorAll(`[id^=btnmetricdownlinkrtt-payload-data-${dev_id}]`).forEach((item)=>{
                        try {
                                var data = $(`#${item.id}`).data('id');
                                var path = item.id.split('-').pop();
                                if(data&&data.state=='start'){
                                    let rtt = Date.now() - data.starttime;
                                    console.log('rtt ', rtt);
                                    storage.payload[dev_id].downlinktesting.downlinkrtt.push(rtt);
                                    item.innerText = ((storage.payload[dev_id].downlinktesting.downlinkrtt.reduce((a, b) => a + b, 0)/storage.payload[dev_id].downlinktesting.downlinkrtt.length)/1000).toFixed(2);

                                    // console.log(item.innerText);
                                }
                                
                        }
                        catch (err) {
                            console.log(err)
                        }  
                    });
                document.querySelectorAll(`[id^=btnmetricdownlinkresp-payload-data-${dev_id}]`).forEach((item)=>{
                    try {
                            var data = $(`#${item.id}`).data('id');
                            // var path = item.id.split('-').pop();
                            if(data&&data.state=='start'){
                                let resp = 1-((storage.payload[dev_id].downlinktesting.downlinkrtt.reduce((a, b) => a + b, 0)/storage.payload[dev_id].downlinktesting.downlinkrtt.length)/70000);
                                storage.payload[dev_id].downlinktesting.downlinkresp.push(resp);
                                item.innerText = resp.toFixed(2);
                            }  
                    }
                    catch (err) {
                        console.log(err)
                    }  
                });

                document.querySelectorAll(`[id^=btnmetricdownlinkrssi-payload-data-${dev_id}]`).forEach((item)=>{
                        try {
                                var data = $(`#${item.id}`).data('id');
                                // var path = item.id.split('-').pop();
                                if(data&&data.state=='start') {
                                    let rssi = parsed_message.rssi
                                    console.log('rssi ', rssi);
                                    storage.payload[dev_id].downlinktesting.downlinkrssi.push(rssi);
                                    item.innerText = ((storage.payload[dev_id].downlinktesting.downlinkrssi.reduce((a, b) => a + b, 0)/storage.payload[dev_id].downlinktesting.downlinkrssi.length)).toFixed(2);
                                    // console.log(item.innerText);
                                }
                                
                        }
                        catch (err) {
                            console.log(err)
                        }  
                    });
                
                document.querySelectorAll(`[id^=btnmetricdownlinkplr-payload-data-${dev_id}]`).forEach((item)=>{
                    try {
                            
                            var data = $(`#${item.id}`).data('id');
                            var path = item.id.split('-').pop();
                            if(data&&data.state=='start'){
                                
                                clearInterval(data.interval);
                                document.getElementById(`btnmetricdownlinktime-payload-data-${dev_id}-${path}`).innerHTML='UPDATED';
                                $(`#btnmetricdownlinkrtt-payload-data-${dev_id}-${path}`).data('id', {
                                    state: 'start',
                                    starttime: Date.now()
                                });
                                let downlink_cmd = data.sensor_config.cmd.DEFAULT;
                                // mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
                                console.log('Send ', downlink_cmd);
                                console.log('btnmetricdownlinkrtt');
                                let interval = setInterval(function(){
                                    let timetag = document.getElementById(`btnmetricdownlinktime-payload-data-${dev_id}-${path}`);
                                    let timevalue = parseFloat(timetag.innerHTML);
                                    //intialize counter
                                    if(timetag.innerHTML=='UPDATED' || timetag.innerHTML=='0') {
                                        mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
                                        timetag.innerHTML = sensor_config.uplink_timeout;
                                    }
                                    else if (timevalue!=0) {
                                        timetag.innerHTML = (timevalue - 0.1).toFixed(1);
                                        
                                    }
                                    else {
                                        timetag.innerHTML = "EXPIRED";
                                        // clearInterval(interval);
                                        mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
                                        timetag.innerHTML = sensor_config.uplink_timeout;
                                        data.packageCnt += 1;
                                        let plr = (data.packageLostCnt+1)/data.packageCnt;
                                        storage.payload[dev_id].downlinktesting.downlinkplr.push(plr);
                                        item.innerText = (plr*100).toFixed(2);

                                        document.getElementById(`btnmetricdownlinkpck-payload-data-${dev_id}-${path}`).innerHTML=`${data.packageCnt}`;

                                        $(`#${item.id}`).data('id', {
                                            state: 'start',
                                            packageLostCnt: data.packageLostCnt+1,
                                            packageCnt: data.packageCnt,
                                            sensor_config: data.sensor_config,
                                            interval: interval
                                        });

                                        $(`#btnmetricdownlinkrtt-payload-data-${dev_id}-${path}`).data('id', {
                                            state: 'start',
                                            starttime: Date.now(),

                                        });
                                        
                                        // document.getElementById(`btn-payload-data-${dev_id}-${w_id}`)["disabled"] = false;
                                        // document.getElementById(`button-payload-data-${w_id}`).style.pointerEvents="auto";
                                        // document.getElementById(`slider-payload-data-${w_id}`).style["background-color"]="#2196F3";
                                        // document.getElementById(`button-payload-data-${w_id}`).checked = !document.getElementById(`button-payload-data-${w_id}`).checked;
                                    }
                                    
                                }, 100);

                                document.getElementById(`btnmetricdownlinkpck-payload-data-${dev_id}-${path}`).innerHTML=`${data.packageCnt}`;
                                $(`#${item.id}`).data('id', {
                                    state: 'start',
                                    packageLostCnt: data.packageLostCnt,
                                    packageCnt: data.packageCnt+1,
                                    sensor_config: data.sensor_config,
                                    interval: interval
                                });
                            }
                            
                    }
                    catch (err) {
                        console.log(err)
                    }  
                });

                // document.querySelectorAll(`[id^=btnmetricuplinkrtt-payload-data-${dev_id}]`).forEach((item)=>{
                //     try {
                //                 var data = $(`#${item.id}`).data('id');
                //                 // var path = item.id.split('-').pop();
                //                 if(data&&data.state=='start'){
                //                     let rtt = Date.now() - data.starttime;
                //                     console.log('rtt ', rtt);
                //                     if(storage.payload[dev_id].uplinktesting){
                //                         storage.payload[dev_id].uplinktesting.uplinkrtt.push(rtt);
                //                     }
                //                     else {
                //                         storage.payload[dev_id].uplinktesting = {
                //                             uplinkplr: [], uplinkrtt: [], uplinkresp: []
                //                         }
                //                         storage.payload[dev_id].uplinktesting.uplinkrtt.push(rtt);
                //                     }
                //                     item.innerText = ((storage.payload[dev_id].uplinktesting.uplinkrtt.reduce((a, b) => a + b, 0)/storage.payload[dev_id].uplinktesting.uplinkrtt.length)/1000).toFixed(2);
                //                     // console.log(item.innerText);
                //                 }
                                
                //         }
                //         catch (err) {
                //             console.log(err)
                //         }  
                // });
                // document.querySelectorAll(`[id^=btnmetricuplinkresp-payload-data-${dev_id}]`).forEach((item)=>{
                //     try {
                //         var data = $(`#${item.id}`).data('id');
                //             // var path = item.id.split('-').pop();
                //             if(data&&data.state=='start'){
                //                 let resp = (storage.payload[dev_id].uplinktesting.uplinkrtt.reduce((a, b) => a + b, 0)/storage.payload[dev_id].uplinktesting.uplinkrtt.length)/70000;
                //                 // console.log('resp ', resp);
                //                 storage.payload[dev_id].uplinktesting.uplinkresp.push(resp);
                                
                //                 item.innerText = (1-storage.payload[dev_id].uplinktesting.uplinkresp.reduce((a, b) => a + b, 0)/storage.payload[dev_id].uplinktesting.uplinkresp.length).toFixed(2);
                //             }
                            
                            
                //     }
                //     catch (err) {
                //         console.log(err)
                //     }  
                // });
                document.querySelectorAll(`[id^=btnmetricuplinkrssi-payload-data-${dev_id}]`).forEach((item)=>{
                        try {
                                var data = $(`#${item.id}`).data('id');
                                console.log(data);
                                // var path = item.id.split('-').pop();
                                if(data && data.state=='start' && parsed_message.f_cnt){
                                    let rssi = parsed_message.rssi;
                                    console.log('rssi ', rssi);
                                    data.rssi += rssi;
                                    item.innerText = (data.rssi/(data.packageCnt+1)).toFixed(2);

                                    $(`#${item.id}`).data('id', {
                                        state: 'start',
                                        packageCnt: data.packageCnt+1,
                                        rssi: data.rssi
                                    });
                                    // console.log(item.innerText);
                                }
                                
                        }
                        catch (err) {
                            console.log(err)
                        }  
                    });
                document.querySelectorAll(`[id^=btnmetricuplinkplr-payload-data-${dev_id}]`).forEach((item)=>{
                    try {
                            var data = $(`#${item.id}`).data('id');
                            var path = item.id.split('-').pop();
                            
                            // if(data&&data.state=='setup'){
                            //     if(parsed_message.f_cnt==1){
                            //         data.state='start';
                            //     }
                            // }
                            
                            if(data&&data.state=='start'&&parsed_message.f_cnt){
                                //console.log(parsed_message);
                                $(`#btnmetricuplinkstate-payload-data-${dev_id}-${path}`).text('Started');
                                let plr = (1-((data.packageCnt+1)/parsed_message.f_cnt));
                                item.innerText = (plr*100).toFixed(2);
                                
                                document.getElementById(`btnmetricuplinkpck-payload-data-${dev_id}-${path}`).innerHTML=(data.packageCnt+1);
                                $(`#${item.id}`).data('id', {
                                    state: 'start',
                                    packageCnt: data.packageCnt+1,
                                    plr: plr
                                });
                            }
                            
                    }
                    catch (err) {
                        console.log(err)
                    }  
                });
                
                clientStorage.setItem(STORAGE_KEY, JSON.stringify(storage));
            }
            else if (topic == `devices/${dev_id}/join`) {
                // devices.forEach((element, index) => {
                //     if(element==dev_id && device_type[index]==4){
                //         let downlink_cmd=sensor_config.cmd[sensor_config.status_val[0].state];
                //         mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
                //     }
                // });

                document.querySelectorAll(`[id^=btnmetricuplinkplr-payload-data-${dev_id}]`).forEach((item)=>{
                    var data = $(`#${item.id}`).data('id');
                    // var path = item.id.split('-').pop();
                    
                    if(data&&data.state=='setup'){
                            $(`#${item.id}`).data('id', {
                                state: 'start',
                                packageCnt: 0,
                                plr: 0
                            });
                        
                        
                    }
                });

                document.querySelectorAll(`[id^=btnmetricuplinkrssi-payload-data-${dev_id}]`).forEach((item)=>{
                    var data = $(`#${item.id}`).data('id');
                    // var path = item.id.split('-').pop();
                    
                    if(data&&data.state=='setup'){
                            $(`#${item.id}`).data('id', {
                                state: 'start',
                                packageCnt: 0,
                                rssi: 0
                            });   
                    }
                });
            }
            else if (topic == `devices/${dev_id}/down/ack`) {
            }
            else if (topic == `devices/${dev_id}/down/nack`) {
                
            }
            else if (topic == `devices/${dev_id}/down/failed`) {
                
            }
            else if (topic == `devices/${dev_id}/down/queued`) {
                
            }
            else if (topic == `devices/${dev_id}/down/sent`) {
                
            }
            else if (topic == `devices/${dev_id}/service/data`) {
                
            }
            else if (topic == `devices/${dev_id}/location/solved`) {
                
            }
            else {
            }
        }
        catch(err){
            console.log(err);
        }
    }
    // handle error
    function streaming_broker_error_handler(error)
    {
        console.log("Can't connect to streaming broker" + error);
        //process.exit(1);
    }
    function timestamp_format(str){
        var arr = new Date(str).toLocaleString(NaN,{ hour12: false }).split(', ');
        arr[0] = arr[0].split('/');
        arr[0].pop();
        arr[0] = `${arr[0][0]}/${arr[0][1]}`
        arr[1] = arr[1].slice(0, 5);
        return `${arr[0]} ${arr[1]}`
    }
    function mqtt_publish(topic, msg) {
        streaming_broker_mqttclient.publish(topic, msg, {
            qos: 0,
            dup: false,
            retain: false,
        }, (err) => {
            console.log(err);
        });
    }
    function toggleButtonManager(dev_id, sensor_config, w_id) {
        let storage = clientStorage.getItem(STORAGE_KEY);
        storage = JSON.parse(storage);
        sensor_config = JSON.parse(sensor_config.replace(/&#34;/g, '"'))[0];
        document.getElementById(`button-payload-data-${dev_id}-${sensor_config.status_key}-${w_id}`)["disabled"] = true;
        document.getElementById(`button-payload-data-${dev_id}-${sensor_config.status_key}-${w_id}`).style.pointerEvents="none";
        let status = storage.payload[dev_id].payload_data[sensor_config.status_key].at(-1);
        delete sensor_config.cmd[status];
        let downlink_cmd = sensor_config.cmd[Object.keys(sensor_config.cmd)[0]];
        
        mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
        console.log('Send ', downlink_cmd);
        let interval = setInterval(function(){
            let timetag = document.getElementById(`buttontime-payload-data-${dev_id}-${sensor_config.status_key}-${w_id}`);
            let timevalue = parseFloat(timetag.innerHTML);
            //intialize counter
            if(timetag.innerHTML=='UPDATED' || timetag.innerHTML=='0' || timetag.innerHTML=='EXPIRED') {
                timetag.innerHTML = sensor_config.uplink_timeout;
            }
            else if (timevalue!=0) {
                timetag.innerHTML = (timevalue - 0.1).toFixed(1);
            }
            else {
                timetag.innerHTML = "EXPIRED";
                clearInterval(interval);
                document.getElementById(`button-payload-data-${dev_id}-${sensor_config.status_key}-${w_id}`)["disabled"] = false;
                document.getElementById(`button-payload-data-${dev_id}-${sensor_config.status_key}-${w_id}`).style.pointerEvents="auto";
            }
            
        }, 100);
        $(`#buttonstate-payload-data-${dev_id}-${sensor_config.status_key}-${w_id}`).data('id', {
            interval: interval
        });
    }
    
    function tripleWayToggleButtonManager(dev_id, sensor_config, w_id) {
        console.log(sensor_config)
        
        let storage = clientStorage.getItem(STORAGE_KEY);
        storage = JSON.parse(storage);
        sensor_config = JSON.parse(sensor_config.replace(/&#34;/g, '"'))[0];
        document.getElementById(`button-payload-data-${dev_id}-${w_id}`)["disabled"] = true;
        document.getElementById(`button-payload-data-${dev_id}-${w_id}`).style.pointerEvents="none";
        document.getElementById(`slider-payload-data-${dev_id}-${w_id}`).style["background-color"]="#B1D9FA";
        let status = []
        
        sensor_config.status_key.forEach(element => {
            status.push(storage.payload[dev_id].payload_data[element].at(-1))
        });
        
        // delete sensor_config.cmd[];
        let downlink_cmd=sensor_config.cmd[sensor_config.status_val[0].state];
        sensor_config.status_val.forEach((element, index) => {
            //Find current state
            
            if(JSON.stringify(element.val)===JSON.stringify(status)) {
                
                if(index==sensor_config.status_val.length-1) downlink_cmd=sensor_config.cmd[sensor_config.status_val[0].state];
                else downlink_cmd=sensor_config.cmd[sensor_config.status_val[index+1].state];
                
            }
            
        });
        mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
        console.log('Send ', downlink_cmd);
        let interval = setInterval(function(){
            let timetag = document.getElementById(`buttontime-payload-data-${w_id}`);
            let timevalue = parseFloat(timetag.innerHTML);
            //intialize counter
            if(timetag.innerHTML=='UPDATED' || timetag.innerHTML=='0' || timetag.innerHTML=='EXPIRED') {
                timetag.innerHTML = sensor_config.uplink_timeout;
            }
            else if (timevalue!=0) {
                timetag.innerHTML = (timevalue - 0.1).toFixed(1);
                
            }
            else {
                timetag.innerHTML = "EXPIRED";
                clearInterval(interval);
                document.getElementById(`button-payload-data-${dev_id}-${w_id}`)["disabled"] = false;
                document.getElementById(`button-payload-data-${dev_id}-${w_id}`).style.pointerEvents="auto";
                document.getElementById(`slider-payload-data-${dev_id}-${w_id}`).style["background-color"]="#2196F3";
                document.getElementById(`button-payload-data-${dev_id}-${w_id}`).checked = !document.getElementById(`button-payload-data-${w_id}`).checked;
            }
            
        }, 100);
        $(`#triplewaybuttonstate-payload-data-${dev_id}-${sensor_config.status_key[sensor_config.status_key.length-1]}-${w_id}`).data('id', {
            interval: interval
        });
    }
    function buttonManager(dev_id, sensor_config, w_id) {
        console.log(sensor_config)
        
        let storage = clientStorage.getItem(STORAGE_KEY);
        storage = JSON.parse(storage);
        sensor_config = JSON.parse(sensor_config.replace(/&#34;/g, '"'))[0];
        document.getElementById(`btn-payload-data-${dev_id}-${w_id}`)["disabled"] = true;
        // document.getElementById(`button-payload-data-${w_id}`).style.pointerEvents="none";
        // document.getElementById(`slider-payload-data-${w_id}`).style["background-color"]="#B1D9FA";
        // let status = []
        // console.log(`btn-payload-data-${dev_id}-${w_id}`);
        // sensor_config.status_key.forEach(element => {
        //     status.push(storage.payload[dev_id].payload_data[element].at(-1))
        // });
        
        // // delete sensor_config.cmd[];
        // let downlink_cmd=sensor_config.cmd[sensor_config.status_val[0].state];
        let downlink_cmd = sensor_config.cmd.TOGGLE;
        console.log('cmd', downlink_cmd)
        
        // if(storage.payload[dev_id].payload_data[sensor_config.status_key]){
        //     let oldData = storage.payload[dev_id].payload_data[sensor_config.status_key].at(-1);
        //     switch (oldData) {
        //         case 'ON':
        //             downlink_cmd=sensor_config.cmd.OFF;
        //             break;
        //         case 'OFF':
        //             downlink_cmd=sensor_config.cmd.ON;
        //             break;
        //         default:
        //             break;
        //     }
        // }
        // let downlink_cmd = {
        //         "downlinks": [
        //             {
        //             "f_port": 200,
        //             "priority": "HIGHEST",
        //             "confirmed": true,
        //             "frm_payload": "qAEGAQUAAlUAAQ=="
        //             }
        //         ]
        //     };
        // sensor_config.status_val.forEach((element, index) => {
        //     //Find current state
            
        //     if(JSON.stringify(element.val)===JSON.stringify(status)) {
                
        //         if(index==sensor_config.status_val.length-1) downlink_cmd=sensor_config.cmd[sensor_config.status_val[0].state];
        //         else downlink_cmd=sensor_config.cmd[sensor_config.status_val[index+1].state];
                
        //     }
            
        // });
        mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
        console.log('Send ', downlink_cmd);
        let interval = setInterval(function(){
            let timetag = document.getElementById(`buttontime-payload-data-${w_id}`);
            let timevalue = parseFloat(timetag.innerHTML);
            //intialize counter
            if(timetag.innerHTML=='UPDATED' || timetag.innerHTML=='0' || timetag.innerHTML=='EXPIRED') {
                timetag.innerHTML = 70; //sensor_config.uplink_timeout;
            }
            else if (timevalue!=0) {
                timetag.innerHTML = (timevalue - 0.1).toFixed(1);
                
            }
            else {
                timetag.innerHTML = "EXPIRED";
                clearInterval(interval);
                document.getElementById(`btn-payload-data-${dev_id}-${w_id}`)["disabled"] = false;
                // document.getElementById(`button-payload-data-${w_id}`).style.pointerEvents="auto";
                // document.getElementById(`slider-payload-data-${w_id}`).style["background-color"]="#2196F3";
                // document.getElementById(`button-payload-data-${w_id}`).checked = !document.getElementById(`button-payload-data-${w_id}`).checked;
            }
            
        }, 100);
        $(`#btn-payload-data-${dev_id}-${w_id}`).data('id', {
            interval: interval
        });
    }
    function metricTestingDownlinkManager(dev_id, sensor_config, w_id) {

        var data = $(`#btnmetricdownlink-payload-data-${dev_id}-${w_id}`).data('id');
        if(data&&data.state=='start') {

            var data = $(`#btnmetricdownlinkplr-payload-data-${dev_id}-${w_id}`).data('id');
            if(data) {
                clearInterval(data.interval);
            }
            
            let storage = clientStorage.getItem(STORAGE_KEY);
            storage = JSON.parse(storage);
            sensor_config = JSON.parse(sensor_config.replace(/&#34;/g, '"'))[0];
            document.getElementById(`btnmetricdownlinklabel-payload-data-${dev_id}-${w_id}`).innerText = "<%= __('Start') %>";
            document.getElementById(`btnmetricdownlink-payload-data-${dev_id}-${w_id}`).style["background-color"]="#4259b8";
            document.getElementById(`btnmetricdownlinktime-payload-data-${dev_id}-${w_id}`).innerHTML = "UPDATED";
            // document.getElementById(`btnmetricdownlinkrtt-payload-data-${dev_id}-${w_id}`).innerHTML = "0";
            // document.getElementById(`btnmetricdownlinkresp-payload-data-${dev_id}-${w_id}`).innerHTML = "0";
            // document.getElementById(`btnmetricdownlinkplr-payload-data-${dev_id}-${w_id}`).innerHTML = "0";
            // document.getElementById(`btnmetricdownlinkpck-payload-data-${dev_id}-${w_id}`).innerHTML = "0";
            delete storage.payload[dev_id].downlinktesting;

            clientStorage.setItem(STORAGE_KEY, JSON.stringify(storage));

            $(`#btnmetricdownlinkrtt-payload-data-${dev_id}-${w_id}`).data('id', {
                state: 'stop'
            });
            $(`#btnmetricdownlinkrssi-payload-data-${dev_id}-${w_id}`).data('id', {
                state: 'stop'
            });
            $(`#btnmetricdownlinkplr-payload-data-${dev_id}-${w_id}`).data('id', {
                state: 'stop'
            });
            $(`#btnmetricdownlinkresp-payload-data-${dev_id}-${w_id}`).data('id', {
                state: 'stop'
            });
            $(`#btnmetricdownlink-payload-data-${dev_id}-${w_id}`).data('id', {
                state: 'stop'
            });
            
            return;
        }

        //VARIABLE PREPROCESSOR
        let storage = clientStorage.getItem(STORAGE_KEY);
        storage = JSON.parse(storage);
        sensor_config = JSON.parse(sensor_config.replace(/&#34;/g, '"'))[0];
        storage.payload[dev_id].downlinktesting = {
                downlinkplr: [], downlinkrtt: [], downlinkresp: [], downlinkrssi: []
        }
        
        //CHANGE BUTTON UI
        document.getElementById(`btnmetricdownlinklabel-payload-data-${dev_id}-${w_id}`).innerText = "<%= __('Stop') %>";
        document.getElementById(`btnmetricdownlink-payload-data-${dev_id}-${w_id}`).style["background-color"]="#C90000";
        //DISABLE OTHER SAME BUTTON
        document.querySelectorAll(`[id^=button-payload-data]`).forEach((item)=>{
            item["disabled"] = true;
            item.style.pointerEvents="none";
        });

        document.querySelectorAll(`[id^=slicer-payload-data]`).forEach((item)=>{
            item.style["background-color"]="#B1D9FA";
        });

        document.querySelectorAll(`[id^=btn-payload-data]`).forEach((item)=>{
            item["disabled"] = true;
        });

        document.querySelectorAll(`[id^=btnmetricuplink-payload-data]`).forEach((item)=>{
            item["disabled"] = true;
        });

        // document.getElementById(`button-payload-data-${w_id}`).style.pointerEvents="none";
        // document.getElementById(`slider-payload-data-${w_id}`).style["background-color"]="#B1D9FA";
        // let status = []
        // console.log(`btn-payload-data-${dev_id}-${w_id}`);
        // sensor_config.status_key.forEach(element => {
        //     status.push(storage.payload[dev_id].payload_data[element].at(-1))
        // });
        
        // // delete sensor_config.cmd[];
        // let downlink_cmd=sensor_config.cmd[sensor_config.status_val[0].state];
        let downlink_cmd = sensor_config.cmd.DEFAULT;
        console.log('cmd', downlink_cmd);
        // let oldData = storage.payload[dev_id].payload_data[sensor_config.status_key].at(-1)
        // if(oldData){
        //     switch (oldData) {
        //         case 'ON':
        //             downlink_cmd=sensor_config.cmd.OFF;
        //             break;
        //         case 'OFF':
        //             downlink_cmd=sensor_config.cmd.ON;
        //             break;
        //         default:
        //             break;
        //     }
        // }
        // let downlink_cmd = {
        //         "downlinks": [
        //             {
        //             "f_port": 200,
        //             "priority": "HIGHEST",
        //             "confirmed": true,
        //             "frm_payload": "qAEGAQUAAlUAAQ=="
        //             }
        //         ]
        //     };
        // sensor_config.status_val.forEach((element, index) => {
        //     //Find current state
            
        //     if(JSON.stringify(element.val)===JSON.stringify(status)) {
                
        //         if(index==sensor_config.status_val.length-1) downlink_cmd=sensor_config.cmd[sensor_config.status_val[0].state];
        //         else downlink_cmd=sensor_config.cmd[sensor_config.status_val[index+1].state];
                
        //     }
            
        // });
        mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
        console.log('Send ', downlink_cmd);
        let interval = setInterval(function(){
            let timetag = document.getElementById(`btnmetricdownlinktime-payload-data-${dev_id}-${w_id}`);
            let timevalue = parseFloat(timetag.innerHTML);
            //intialize counter
            if(timetag.innerHTML=='UPDATED' || timetag.innerHTML=='0' || timetag.innerHTML=='EXPIRED') {
                timetag.innerHTML = 70; //sensor_config.uplink_timeout;
            }
            else if (timevalue!=0) {
                timetag.innerHTML = (timevalue - 0.1).toFixed(1);
                
            }
            else {
                timetag.innerHTML = "EXPIRED";
                clearInterval(interval);
                // document.getElementById(`btn-payload-data-${dev_id}-${w_id}`)["disabled"] = false;
                // document.getElementById(`button-payload-data-${w_id}`).style.pointerEvents="auto";
                // document.getElementById(`slider-payload-data-${w_id}`).style["background-color"]="#2196F3";
                // document.getElementById(`button-payload-data-${w_id}`).checked = !document.getElementById(`button-payload-data-${w_id}`).checked;
            }
            
        }, 100);
        // $(`#btn-payload-data-${dev_id}-${w_id}`).data('id', {
        //     interval: interval
        // });

        $(`#btnmetricdownlinkrtt-payload-data-${dev_id}-${w_id}`).data('id', {
            state: 'start',
            starttime: Date.now()
        });
        $(`#btnmetricdownlinkrssi-payload-data-${dev_id}-${w_id}`).data('id', {
            state: 'start',
        });
        $(`#btnmetricdownlinkplr-payload-data-${dev_id}-${w_id}`).data('id', {
            state: 'start',
            packageCnt: 1,
            packageLostCnt: 0,
            sensor_config: sensor_config,
            interval: interval
        });
        document.getElementById(`btnmetricdownlinkpck-payload-data-${dev_id}-${w_id}`).innerHTML=1;
        $(`#btnmetricdownlinkresp-payload-data-${dev_id}-${w_id}`).data('id', {
            state: 'start'
        });
        $(`#btnmetricdownlink-payload-data-${dev_id}-${w_id}`).data('id', {
            state: 'start'
        });
        storage.payload[dev_id].downlinktesting = {
                downlinkplr: [], downlinkrtt: [], downlinkresp: [], downlinkrssi: []
        }
        clientStorage.setItem(STORAGE_KEY, JSON.stringify(storage));
    }

    function metricTestingUplinkManager(dev_id, sensor_config, w_id) {

        var data = $(`#btnmetricuplink-payload-data-${dev_id}-${w_id}`).data('id');
        if(data&&(data.state=='start'||data.state=='setup')) {
            
            // var data = $(`#btnmetricdownlinkplr-payload-data-${dev_id}-${w_id}`).data('id');
            // if(data) {
            //     clearInterval(data.interval);
            // }
            sensor_config = JSON.parse(sensor_config.replace(/&#34;/g, '"'))[0];
            let downlink_cmd = sensor_config.cmd.NORMAL;
            mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
            console.log('Send ', downlink_cmd);
            $(`#btnmetricuplinkstate-payload-data-${dev_id}-${w_id}`).text('Stopped');
            let storage = clientStorage.getItem(STORAGE_KEY);
            storage = JSON.parse(storage);
            document.getElementById(`btnmetricuplinklabel-payload-data-${dev_id}-${w_id}`).innerHTML = "<%= __('Start') %>";
            document.getElementById(`btnmetricuplink-payload-data-${dev_id}-${w_id}`).style["background-color"]="#4259b8";
            // document.getElementById(`btnmetricuplinktime-payload-data-${dev_id}-${w_id}`).innerHTML = "UPDATED";
            // document.getElementById(`btnmetricuplinkrtt-payload-data-${dev_id}-${w_id}`).innerHTML = "0";
            // document.getElementById(`btnmetricuplinkresp-payload-data-${dev_id}-${w_id}`).innerHTML = "0";
            // document.getElementById(`btnmetricuplinkplr-payload-data-${dev_id}-${w_id}`).innerHTML = "0";
            // document.getElementById(`btnmetricuplinkpck-payload-data-${dev_id}-${w_id}`).innerHTML = "0";
            delete storage.payload[dev_id].uplinktesting;

            clientStorage.setItem(STORAGE_KEY, JSON.stringify(storage));

            // $(`#btnmetricuplinkrtt-payload-data-${dev_id}-${w_id}`).data('id', {
            //     state: 'stop'
            // });
            $(`#btnmetricuplinkplr-payload-data-${dev_id}-${w_id}`).data('id', {
                state: 'stop'
            });
            $(`#btnmetricuplinkrssi-payload-data-${dev_id}-${w_id}`).data('id', {
                state: 'stop'
            });
            // $(`#btnmetricuplinkresp-payload-data-${dev_id}-${w_id}`).data('id', {
            //     state: 'stop'
            // });
            $(`#btnmetricuplink-payload-data-${dev_id}-${w_id}`).data('id', {
                state: 'stop'
            });
            return;
        }

        //VARIABLE PREPROCESSOR
        let storage = clientStorage.getItem(STORAGE_KEY);
        storage = JSON.parse(storage);
        sensor_config = JSON.parse(sensor_config.replace(/&#34;/g, '"'))[0];

        //CHANGE BUTTON UI
        document.getElementById(`btnmetricuplinklabel-payload-data-${dev_id}-${w_id}`).innerText = "<%= __('Stop') %>";
        document.getElementById(`btnmetricuplink-payload-data-${dev_id}-${w_id}`).style["background-color"]="#C90000";
        //DISABLE OTHER SAME BUTTON
        document.querySelectorAll(`[id^=button-payload-data]`).forEach((item)=>{
            item["disabled"] = true;
            item.style.pointerEvents="none";
        });

        document.querySelectorAll(`[id^=slicer-payload-data]`).forEach((item)=>{
            item.style["background-color"]="#B1D9FA";
        });

        document.querySelectorAll(`[id^=btn-payload-data]`).forEach((item)=>{
            item["disabled"] = true;
        });

        document.querySelectorAll(`[id^=btnmetricdownlink-payload-data]`).forEach((item)=>{
            item["disabled"] = true;
        });

        // document.getElementById(`button-payload-data-${w_id}`).style.pointerEvents="none";
        // document.getElementById(`slider-payload-data-${w_id}`).style["background-color"]="#B1D9FA";
        // let status = []
        // console.log(`btn-payload-data-${dev_id}-${w_id}`);
        // sensor_config.status_key.forEach(element => {
        //     status.push(storage.payload[dev_id].payload_data[element].at(-1))
        // });

        // // delete sensor_config.cmd[];
        // let downlink_cmd=sensor_config.cmd[sensor_config.status_val[0].state];
        let downlink_cmd = sensor_config.cmd.DEFAULT;
        mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
        console.log('Send ', downlink_cmd);
        // downlink_cmd = sensor_config.cmd.RESET;
        // mqtt_publish(`devices/${dev_id}/down/push`, JSON.stringify(downlink_cmd));
        // console.log('Send ', downlink_cmd);
        // let oldData = storage.payload[dev_id].payload_data[sensor_config.status_key].at(-1)
        // if(oldData){
        //     switch (oldData) {
        //         case 'ON':
        //             downlink_cmd=sensor_config.cmd.OFF;
        //             break;
        //         case 'OFF':
        //             downlink_cmd=sensor_config.cmd.ON;
        //             break;
        //         default:
        //             break;
        //     }
        // }
        // let downlink_cmd = {
        //         "downlinks": [
        //             {
        //             "f_port": 200,
        //             "priority": "HIGHEST",
        //             "confirmed": true,
        //             "frm_payload": "qAEGAQUAAlUAAQ=="
        //             }
        //         ]
        //     };
        // sensor_config.status_val.forEach((element, index) => {
        //     //Find current state
            
        //     if(JSON.stringify(element.val)===JSON.stringify(status)) {
                
        //         if(index==sensor_config.status_val.length-1) downlink_cmd=sensor_config.cmd[sensor_config.status_val[0].state];
        //         else downlink_cmd=sensor_config.cmd[sensor_config.status_val[index+1].state];
                
        //     }
            
        // });
        
        
        
        // let interval = setInterval(function(){
        //     let timetag = document.getElementById(`buttontime-payload-data-${w_id}`);
        //     let timevalue = parseFloat(timetag.innerHTML);
        //     //intialize counter
        //     if(timetag.innerHTML=='UPDATED' || timetag.innerHTML=='0' || timetag.innerHTML=='EXPIRED') {
        //         timetag.innerHTML = sensor_config.uplink_timeout;
        //     }
        //     else if (timevalue!=0) {
        //         timetag.innerHTML = (timevalue - 0.1).toFixed(1);
                
        //     }
        //     else {
        //         timetag.innerHTML = "EXPIRED";
        //         clearInterval(interval);
        //         document.getElementById(`btn-payload-data-${dev_id}-${w_id}`)["disabled"] = false;
        //         // document.getElementById(`button-payload-data-${w_id}`).style.pointerEvents="auto";
        //         // document.getElementById(`slider-payload-data-${w_id}`).style["background-color"]="#2196F3";
        //         // document.getElementById(`button-payload-data-${w_id}`).checked = !document.getElementById(`button-payload-data-${w_id}`).checked;
        //     }
            
        // }, 100);
        // $(`#btn-payload-data-${dev_id}-${w_id}`).data('id', {
        //     interval: interval
        // });

        // $(`#btnmetricuplinkrtt-payload-data-${dev_id}-${w_id}`).data('id', {
        //     state: 'start',
        //     starttime: Date.now()
        // });
        $(`#btnmetricuplinkplr-payload-data-${dev_id}-${w_id}`).data('id', {
            state: 'setup'
        });
        $(`#btnmetricuplinkrssi-payload-data-${dev_id}-${w_id}`).data('id', {
            state: 'setup'
        });
        $(`#btnmetricuplinkpck-payload-data-${dev_id}-${w_id}`).text(0);
        // $(`#btnmetricuplinkresp-payload-data-${dev_id}-${w_id}`).data('id', {
        //     state: 'start'
        // });
        $(`#btnmetricuplink-payload-data-${dev_id}-${w_id}`).data('id', {
            state: 'setup'
        });
        $(`#btnmetricuplinkstate-payload-data-${dev_id}-${w_id}`).text('Processing...');

}
</script>
</body>

</html>